; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26131.1 

	TITLE	C:\Users\smith\Projects\CallCenter\ServiceGroup.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z		; CSysOut::operator<<
PUBLIC	??6CSysOut@@QAEAAV0@D@Z				; CSysOut::operator<<
PUBLIC	?flush@@YAAAVCSysOut@@AAV1@@Z			; flush
PUBLIC	?endl@@YAAAVCSysOut@@AAV1@@Z			; endl
PUBLIC	?c_str@TZSuperShortString@@QBEPBDXZ		; TZSuperShortString::c_str
PUBLIC	??0CServiceGroup@@QAE@XZ			; CServiceGroup::CServiceGroup
PUBLIC	??1CServiceGroup@@UAE@XZ			; CServiceGroup::~CServiceGroup
PUBLIC	?SaveTo@CServiceGroup@@QAEXPAVTBinaryData@@@Z	; CServiceGroup::SaveTo
PUBLIC	?LoadFrom@CServiceGroup@@QAEXPAVTBinaryData@@@Z	; CServiceGroup::LoadFrom
PUBLIC	?SaveTo@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroup::SaveTo
PUBLIC	?LoadFrom@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroup::LoadFrom
PUBLIC	??_GCServiceGroup@@UAEPAXI@Z			; CServiceGroup::`scalar deleting destructor'
PUBLIC	??0CServiceGroupList@@QAE@XZ			; CServiceGroupList::CServiceGroupList
PUBLIC	??1CServiceGroupList@@UAE@XZ			; CServiceGroupList::~CServiceGroupList
PUBLIC	?SaveTo@CServiceGroupList@@QAEXPAVTBinaryData@@@Z ; CServiceGroupList::SaveTo
PUBLIC	?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z ; CServiceGroupList::LoadFrom
PUBLIC	?SaveSGUIDListTo@CServiceGroupList@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroupList::SaveSGUIDListTo
PUBLIC	?SaveTo@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroupList::SaveTo
PUBLIC	?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroupList::LoadFrom
PUBLIC	?SaveInfoForBanner@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroupList::SaveInfoForBanner
PUBLIC	?RegisterOperator@CServiceGroupList@@QAEXIAAVTUIList@@@Z ; CServiceGroupList::RegisterOperator
PUBLIC	?UnregisterOperator@CServiceGroupList@@QAEXI@Z	; CServiceGroupList::UnregisterOperator
PUBLIC	?IncAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z ; CServiceGroupList::IncAOCounter
PUBLIC	?DecAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z ; CServiceGroupList::DecAOCounter
PUBLIC	?DecAOCounter@CServiceGroupList@@QAEXI@Z	; CServiceGroupList::DecAOCounter
PUBLIC	?GetActiveRMCountInSG@CServiceGroupList@@QAEIII@Z ; CServiceGroupList::GetActiveRMCountInSG
PUBLIC	?GetRMOIndexForCallServ@CServiceGroupList@@QAEHAAVTCSUI32DualList@@I@Z ; CServiceGroupList::GetRMOIndexForCallServ
PUBLIC	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ	; TPtrList<CServiceGroup>::GetCount
PUBLIC	?Add@?$TPtrList@VCServiceGroup@@@@QAEXPAVCServiceGroup@@@Z ; TPtrList<CServiceGroup>::Add
PUBLIC	?Reset@?$TPtrList@VCServiceGroup@@@@QAEXXZ	; TPtrList<CServiceGroup>::Reset
PUBLIC	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
PUBLIC	??0?$TPtrList@VCServiceGroup@@@@QAE@XZ		; TPtrList<CServiceGroup>::TPtrList<CServiceGroup>
PUBLIC	??1?$TPtrList@VCServiceGroup@@@@QAE@XZ		; TPtrList<CServiceGroup>::~TPtrList<CServiceGroup>
PUBLIC	??_GCServiceGroupList@@UAEPAXI@Z		; CServiceGroupList::`scalar deleting destructor'
PUBLIC	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
PUBLIC	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABH@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABK@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAH@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAK@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom
PUBLIC	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo
PUBLIC	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator<<<4096>
PUBLIC	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
PUBLIC	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator>><4096>
PUBLIC	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator>><4096>
PUBLIC	??_7CServiceGroup@@6B@				; CServiceGroup::`vftable'
PUBLIC	??_7CServiceGroupList@@6B@			; CServiceGroupList::`vftable'
PUBLIC	??_C@_03FHHPMFJD@SG?3?$AA@			; `string'
PUBLIC	??_C@_04GMBOICGN@?5OC?3?$AA@			; `string'
PUBLIC	__TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	__CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8 ; TFixedSizeBinaryData<4096>::ENoDataForRead `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81
PUBLIC	??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8 ; TFixedSizeBinaryData<4096>::EFSBDException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
PUBLIC	__TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	__CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8 ; TFixedSizeBinaryData<4096>::EObjectTooLong `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81
PUBLIC	??_R4CServiceGroup@@6B@				; CServiceGroup::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServiceGroup@@@8			; CServiceGroup `RTTI Type Descriptor'
PUBLIC	??_R3CServiceGroup@@8				; CServiceGroup::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServiceGroup@@8				; CServiceGroup::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServiceGroup@@8			; CServiceGroup::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CServiceGroupList@@6B@			; CServiceGroupList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServiceGroupList@@@8			; CServiceGroupList `RTTI Type Descriptor'
PUBLIC	??_R3CServiceGroupList@@8			; CServiceGroupList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServiceGroupList@@8			; CServiceGroupList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServiceGroupList@@8		; CServiceGroupList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EN@CSystemObject@@8			; CSystemObject::`RTTI Base Class Descriptor at (4,-1,0,77)'
PUBLIC	??_R0?AVCSystemObject@@@8			; CSystemObject `RTTI Type Descriptor'
PUBLIC	??_R3CSystemObject@@8				; CSystemObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSystemObject@@8				; CSystemObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSystemObject@@8			; CSystemObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_memcpy:PROC
EXTRN	?flush@CSysOut@@QAEAAV1@XZ:PROC			; CSysOut::flush
EXTRN	??6CSysOut@@QAEAAV0@PBD@Z:PROC			; CSysOut::operator<<
EXTRN	??6CSysOut@@QAEAAV0@E@Z:PROC			; CSysOut::operator<<
EXTRN	??6CSysOut@@QAEAAV0@I@Z:PROC			; CSysOut::operator<<
EXTRN	?time@@YAAAVCSysOut@@AAV1@@Z:PROC		; time
EXTRN	??6TBinaryData@@QAEAAV0@AB_N@Z:PROC		; TBinaryData::operator<<
EXTRN	??6TBinaryData@@QAEAAV0@ABE@Z:PROC		; TBinaryData::operator<<
EXTRN	??6TBinaryData@@QAEAAV0@ABH@Z:PROC		; TBinaryData::operator<<
EXTRN	??6TBinaryData@@QAEAAV0@ABI@Z:PROC		; TBinaryData::operator<<
EXTRN	??6TBinaryData@@QAEAAV0@ABK@Z:PROC		; TBinaryData::operator<<
EXTRN	??5TBinaryData@@QAEAAV0@AA_N@Z:PROC		; TBinaryData::operator>>
EXTRN	??5TBinaryData@@QAEAAV0@AAE@Z:PROC		; TBinaryData::operator>>
EXTRN	??5TBinaryData@@QAEAAV0@AAH@Z:PROC		; TBinaryData::operator>>
EXTRN	??5TBinaryData@@QAEAAV0@AAI@Z:PROC		; TBinaryData::operator>>
EXTRN	??5TBinaryData@@QAEAAV0@AAK@Z:PROC		; TBinaryData::operator>>
EXTRN	??0TZSuperShortString@@QAE@XZ:PROC		; TZSuperShortString::TZSuperShortString
EXTRN	??1TZSuperShortString@@QAE@XZ:PROC		; TZSuperShortString::~TZSuperShortString
EXTRN	?set_length@TZSuperShortString@@QAEEE@Z:PROC	; TZSuperShortString::set_length
EXTRN	?length@TZSuperShortString@@QBEEXZ:PROC		; TZSuperShortString::length
EXTRN	??6@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z:PROC ; operator<<
EXTRN	??5@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z:PROC ; operator>>
EXTRN	??0TUIList@@QAE@XZ:PROC				; TUIList::TUIList
EXTRN	??1TUIList@@QAE@XZ:PROC				; TUIList::~TUIList
EXTRN	?SetSize@TUIList@@QAE_NI@Z:PROC			; TUIList::SetSize
EXTRN	?GetSize@TUIList@@QBEIXZ:PROC			; TUIList::GetSize
EXTRN	?Reset@TUIList@@QAEXXZ:PROC			; TUIList::Reset
EXTRN	?ValueInList@TUIList@@QBE_NI@Z:PROC		; TUIList::ValueInList
EXTRN	?Add@TUIList@@QAE_NI@Z:PROC			; TUIList::Add
EXTRN	?Delete@TUIList@@QAE_NI@Z:PROC			; TUIList::Delete
EXTRN	?GetIndexFor@TUIList@@QAEHI@Z:PROC		; TUIList::GetIndexFor
EXTRN	??ATUIList@@QAEAAII@Z:PROC			; TUIList::operator[]
EXTRN	??6@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z:PROC	; operator<<
EXTRN	??5@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z:PROC	; operator>>
EXTRN	?GetCount@TCSUI32DualList@@QAEHXZ:PROC		; TCSUI32DualList::GetCount
EXTRN	?GetData1@TCSUI32DualList@@QAEIH@Z:PROC		; TCSUI32DualList::GetData1
EXTRN	?GetIndexForD2@TCSUI32DualList@@QAEHI@Z:PROC	; TCSUI32DualList::GetIndexForD2
EXTRN	?PostSysMessage@CSystemObject@@IAEXEEGI@Z:PROC	; CSystemObject::PostSysMessage
EXTRN	??_ECServiceGroup@@UAEPAXI@Z:PROC		; CServiceGroup::`vector deleting destructor'
EXTRN	??_ECServiceGroupList@@UAEPAXI@Z:PROC		; CServiceGroupList::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?FLOG@@3VCSysOut@@A:BYTE			; FLOG
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CSystemObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSystemObject@@8 DD FLAT:??_R0?AVCSystemObject@@@8 ; CSystemObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CSystemObject@@8
rdata$r	SEGMENT
??_R2CSystemObject@@8 DD FLAT:??_R1A@?0A@EA@CSystemObject@@8 ; CSystemObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSystemObject@@8
rdata$r	SEGMENT
??_R3CSystemObject@@8 DD 00H				; CSystemObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSystemObject@@@8
data$r	SEGMENT
??_R0?AVCSystemObject@@@8 DD FLAT:??_7type_info@@6B@	; CSystemObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSystemObject@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EN@CSystemObject@@8
rdata$r	SEGMENT
??_R13?0A@EN@CSystemObject@@8 DD FLAT:??_R0?AVCSystemObject@@@8 ; CSystemObject::`RTTI Base Class Descriptor at (4,-1,0,77)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CServiceGroupList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServiceGroupList@@8 DD FLAT:??_R0?AVCServiceGroupList@@@8 ; CServiceGroupList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServiceGroupList@@8
rdata$r	ENDS
;	COMDAT ??_R2CServiceGroupList@@8
rdata$r	SEGMENT
??_R2CServiceGroupList@@8 DD FLAT:??_R1A@?0A@EA@CServiceGroupList@@8 ; CServiceGroupList::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CServiceGroupList@@8
rdata$r	SEGMENT
??_R3CServiceGroupList@@8 DD 00H			; CServiceGroupList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CServiceGroupList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServiceGroupList@@@8
data$r	SEGMENT
??_R0?AVCServiceGroupList@@@8 DD FLAT:??_7type_info@@6B@ ; CServiceGroupList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServiceGroupList@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServiceGroupList@@6B@
rdata$r	SEGMENT
??_R4CServiceGroupList@@6B@ DD 00H			; CServiceGroupList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServiceGroupList@@@8
	DD	FLAT:??_R3CServiceGroupList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CServiceGroup@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServiceGroup@@8 DD FLAT:??_R0?AVCServiceGroup@@@8 ; CServiceGroup::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServiceGroup@@8
rdata$r	ENDS
;	COMDAT ??_R2CServiceGroup@@8
rdata$r	SEGMENT
??_R2CServiceGroup@@8 DD FLAT:??_R1A@?0A@EA@CServiceGroup@@8 ; CServiceGroup::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CServiceGroup@@8
rdata$r	SEGMENT
??_R3CServiceGroup@@8 DD 00H				; CServiceGroup::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CServiceGroup@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServiceGroup@@@8
data$r	SEGMENT
??_R0?AVCServiceGroup@@@8 DD FLAT:??_7type_info@@6B@	; CServiceGroup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServiceGroup@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServiceGroup@@6B@
rdata$r	SEGMENT
??_R4CServiceGroup@@6B@ DD 00H				; CServiceGroup::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServiceGroup@@@8
	DD	FLAT:??_R3CServiceGroup@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	SEGMENT
__CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81 DD 00H
	DD	FLAT:??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8
data$r	SEGMENT
??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8 DD FLAT:??_7type_info@@6B@ ; TFixedSizeBinaryData<4096>::EObjectTooLong `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@ DD 02H
	DD	FLAT:__CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81
	DD	FLAT:__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	ENDS
;	COMDAT __TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	SEGMENT
__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81 DD 00H
	DD	FLAT:??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8
data$r	SEGMENT
??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8 DD FLAT:??_7type_info@@6B@ ; TFixedSizeBinaryData<4096>::EFSBDException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	SEGMENT
__CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81 DD 00H
	DD	FLAT:??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8
data$r	SEGMENT
??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8 DD FLAT:??_7type_info@@6B@ ; TFixedSizeBinaryData<4096>::ENoDataForRead `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@ DD 02H
	DD	FLAT:__CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81
	DD	FLAT:__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	ENDS
;	COMDAT __TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	ENDS
;	COMDAT ??_C@_04GMBOICGN@?5OC?3?$AA@
CONST	SEGMENT
??_C@_04GMBOICGN@?5OC?3?$AA@ DB ' OC:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHHPMFJD@SG?3?$AA@
CONST	SEGMENT
??_C@_03FHHPMFJD@SG?3?$AA@ DB 'SG:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CServiceGroupList@@6B@
CONST	SEGMENT
??_7CServiceGroupList@@6B@ DD FLAT:??_R4CServiceGroupList@@6B@ ; CServiceGroupList::`vftable'
	DD	FLAT:??_ECServiceGroupList@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CServiceGroup@@6B@
CONST	SEGMENT
??_7CServiceGroup@@6B@ DD FLAT:??_R4CServiceGroup@@6B@	; CServiceGroup::`vftable'
	DD	FLAT:??_ECServiceGroup@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$TPtrList@VCServiceGroup@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z$0
__ehfuncinfo$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z$0
__ehfuncinfo$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CServiceGroup@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CServiceGroup@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CServiceGroup@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CServiceGroup@@QAE@XZ$2
__ehfuncinfo$??0CServiceGroup@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CServiceGroup@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tzssstring.h
;	COMDAT ??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z
_TEXT	SEGMENT
_size$ = -5						; size = 1
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z PROC ; operator>><4096>, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 77   : unsigned __int8 size;
; 78   : 	s.ReadDataTo((void *)&size, sizeof(size));

	push	1
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 79   : 	Value.set_length(size);

	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?set_length@TZSuperShortString@@QAEEE@Z	; TZSuperShortString::set_length

; 80   : 	s.ReadDataTo((void *)Value.c_str(), size);

	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?c_str@TZSuperShortString@@QBEPBDXZ	; TZSuperShortString::c_str
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 81   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 82   : };

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@operator
$LN3@operator:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ENDP ; operator>><4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z
_TEXT	SEGMENT
_size$ = -8						; size = 4
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z PROC ; operator>><4096>, COMDAT

; 65   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 66   : 	Value.Reset();

	mov	ecx, DWORD PTR _Value$[ebp]
	call	?Reset@TUIList@@QAEXXZ			; TUIList::Reset

; 67   : unsigned __int32 size;
; 68   : 	s.ReadDataTo((void *)&size, sizeof(unsigned int));

	push	4
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 69   : 	Value.SetSize(size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?SetSize@TUIList@@QAE_NI@Z		; TUIList::SetSize

; 70   : 	s.ReadDataTo((void *)Value.List, Value.size*sizeof(unsigned __int32));

	mov	eax, DWORD PTR _Value$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _Value$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 71   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 72   : };

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@operator
$LN3@operator:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ENDP ; operator>><4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tzssstring.h
;	COMDAT ??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z
_TEXT	SEGMENT
_size$ = -5						; size = 1
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z PROC ; operator<<<4096>, COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 67   : unsigned __int8 size;
; 68   : 	size = Value.length();

	mov	ecx, DWORD PTR _Value$[ebp]
	call	?length@TZSuperShortString@@QBEEXZ	; TZSuperShortString::length
	mov	BYTE PTR _size$[ebp], al

; 69   : 	s.WriteDataFrom((void *)&size, sizeof(size));

	push	1
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 70   : 	s.WriteDataFrom((void *)Value.c_str(), size);

	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?c_str@TZSuperShortString@@QBEPBDXZ	; TZSuperShortString::c_str
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 71   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 72   : };

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@operator
$LN3@operator:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ENDP ; operator<<<4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z PROC ; operator<<<4096>, COMDAT

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 58   : 	s.WriteDataFrom((void *)&Value.size, sizeof(Value.size));

	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 59   : 	s.WriteDataFrom((void *)Value.List, Value.size*sizeof(unsigned __int32));

	mov	eax, DWORD PTR _Value$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _Value$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 60   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ENDP ; operator<<<4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::ReadDataTo, COMDAT
; _this$ = ecx

; 83   : 	void ReadDataTo(void *ptr, unsigned __int32 sz) { __readto(ptr, sz); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::ReadDataTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::WriteDataFrom, COMDAT
; _this$ = ecx

; 82   : 	void WriteDataFrom(void *ptr, unsigned __int32 sz) { __writefrom(ptr, sz); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::WriteDataFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAK@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 72   : 	TFSBD_OPERATORRSH(unsigned long);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAK@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 70   : 	TFSBD_OPERATORRSH(unsigned int);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAH@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 69   : 	TFSBD_OPERATORRSH(int);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAH@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 68   : 	TFSBD_OPERATORRSH(unsigned char);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 66   : 	TFSBD_OPERATORRSH(bool);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABK@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 56   : 	TFSBD_OPERATORLSH(const unsigned long);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABK@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 54   : 	TFSBD_OPERATORLSH(const unsigned int);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABH@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 53   : 	TFSBD_OPERATORLSH(const int);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABH@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 52   : 	TFSBD_OPERATORLSH(const unsigned char);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 50   : 	TFSBD_OPERATORLSH(const bool);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::__readto, COMDAT
; _this$ = ecx

; 30   : 	inline void __readto(void * ptr, unsigned int sz) { if (curpos+sz>size) throw ENoDataForRead(); memcpy(ptr, &data[curpos], sz); curpos+=sz;};

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+4104]
	jbe	SHORT $LN2@readto
	push	OFFSET __TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@readto:
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4100]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4100], ecx
$LN3@readto:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::__readto
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::__writefrom, COMDAT
; _this$ = ecx

; 29   : 	inline void __writefrom(void * ptr, unsigned int sz) { if (curpos+sz>SEGSIZE) throw EObjectTooLong(); memcpy(&data[curpos], ptr, sz); curpos+=sz; size+=sz;};

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	cmp	ecx, 4096				; 00001000H
	jbe	SHORT $LN2@writefrom
	push	OFFSET __TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@writefrom:
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4100]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4100], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4104]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4104], ecx
$LN3@writefrom:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::__writefrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCServiceGroupList@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCServiceGroupList@@UAEPAXI@Z PROC			; CServiceGroupList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CServiceGroupList@@UAE@XZ		; CServiceGroupList::~CServiceGroupList
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCServiceGroupList@@UAEPAXI@Z ENDP			; CServiceGroupList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??1?$TPtrList@VCServiceGroup@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$TPtrList@VCServiceGroup@@@@QAE@XZ PROC		; TPtrList<CServiceGroup>::~TPtrList<CServiceGroup>, COMDAT
; _this$ = ecx

; 176  : 	~TPtrList() { Reset(); };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$TPtrList@VCServiceGroup@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$TPtrList@VCServiceGroup@@@@QAEXXZ ; TPtrList<CServiceGroup>::Reset
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TUIList@@QAE@XZ			; TUIList::~TUIList
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$TPtrList@VCServiceGroup@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$TPtrList@VCServiceGroup@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$TPtrList@VCServiceGroup@@@@QAE@XZ ENDP		; TPtrList<CServiceGroup>::~TPtrList<CServiceGroup>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??0?$TPtrList@VCServiceGroup@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$TPtrList@VCServiceGroup@@@@QAE@XZ PROC		; TPtrList<CServiceGroup>::TPtrList<CServiceGroup>, COMDAT
; _this$ = ecx

; 175  : 	TPtrList() { };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TUIList@@QAE@XZ			; TUIList::TUIList
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$TPtrList@VCServiceGroup@@@@QAE@XZ ENDP		; TPtrList<CServiceGroup>::TPtrList<CServiceGroup>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z PROC ; TPtrList<CServiceGroup>::operator[], COMDAT
; _this$ = ecx

; 173  : 	Type *operator[](unsigned __int32 index) { return (Type *)TUIList::operator [](index); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??ATUIList@@QAEAAII@Z			; TUIList::operator[]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ENDP ; TPtrList<CServiceGroup>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ?Reset@?$TPtrList@VCServiceGroup@@@@QAEXXZ
_TEXT	SEGMENT
tv85 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_i$3 = -20						; size = 4
_this$ = -8						; size = 4
?Reset@?$TPtrList@VCServiceGroup@@@@QAEXXZ PROC		; TPtrList<CServiceGroup>::Reset, COMDAT
; _this$ = ecx

; 171  : 	void Reset(void) { for (unsigned i=0; i<TUIList::GetSize(); i++) delete (Type*)TUIList::operator [](i); TUIList::Reset(); };

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@Reset
$LN2@Reset:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@Reset:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSize@TUIList@@QBEIXZ		; TUIList::GetSize
	cmp	DWORD PTR _i$3[ebp], eax
	jae	SHORT $LN3@Reset
	mov	eax, DWORD PTR _i$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??ATUIList@@QAEAAII@Z			; TUIList::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Reset
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@Reset
$LN6@Reset:
	mov	DWORD PTR tv85[ebp], 0
$LN7@Reset:
	jmp	SHORT $LN2@Reset
$LN3@Reset:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@TUIList@@QAEXXZ			; TUIList::Reset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@?$TPtrList@VCServiceGroup@@@@QAEXXZ ENDP		; TPtrList<CServiceGroup>::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ?Add@?$TPtrList@VCServiceGroup@@@@QAEXPAVCServiceGroup@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
?Add@?$TPtrList@VCServiceGroup@@@@QAEXPAVCServiceGroup@@@Z PROC ; TPtrList<CServiceGroup>::Add, COMDAT
; _this$ = ecx

; 168  : 	void Add(Type *data) { TUIList::Add((unsigned __int32)data); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@TUIList@@QAE_NI@Z			; TUIList::Add
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$TPtrList@VCServiceGroup@@@@QAEXPAVCServiceGroup@@@Z ENDP ; TPtrList<CServiceGroup>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ PROC	; TPtrList<CServiceGroup>::GetCount, COMDAT
; _this$ = ecx

; 166  : 	unsigned __int32 GetCount(void) { return TUIList::GetSize(); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSize@TUIList@@QBEIXZ		; TUIList::GetSize
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ENDP	; TPtrList<CServiceGroup>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?GetRMOIndexForCallServ@CServiceGroupList@@QAEHAAVTCSUI32DualList@@I@Z
_TEXT	SEGMENT
tv85 = -256						; size = 4
_CSG$1 = -56						; size = 4
_p$2 = -44						; size = 4
_k$3 = -32						; size = 4
_pos$4 = -20						; size = 4
_this$ = -8						; size = 4
_FreeRMOIndexList$ = 8					; size = 4
_SG$ = 12						; size = 4
?GetRMOIndexForCallServ@CServiceGroupList@@QAEHAAVTCSUI32DualList@@I@Z PROC ; CServiceGroupList::GetRMOIndexForCallServ, COMDAT
; _this$ = ecx

; 240  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$4[ebp], 0
	jmp	SHORT $LN4@GetRMOInde
$LN2@GetRMOInde:
	mov	eax, DWORD PTR _pos$4[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$4[ebp], eax
$LN4@GetRMOInde:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$4[ebp], eax
	jae	$LN3@GetRMOInde

; 242  : 	{
; 243  : 		if (SGList[pos]->SGID!=SG) continue;

	mov	eax, DWORD PTR _pos$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _SG$[ebp]
	je	SHORT $LN13@GetRMOInde
	jmp	SHORT $LN2@GetRMOInde
$LN13@GetRMOInde:

; 244  : 		int k, p;
; 245  : 		CServiceGroup *CSG = SGList[pos];

	mov	eax, DWORD PTR _pos$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	DWORD PTR _CSG$1[ebp], eax

; 246  : 
; 247  : 		switch (SGList[pos]->SGSearchMethod&SGSM_SRCHMTHMASK)

	mov	eax, DWORD PTR _pos$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 15					; 0000000fH
	mov	DWORD PTR tv85[ebp], ecx
	je	SHORT $LN14@GetRMOInde
	cmp	DWORD PTR tv85[ebp], 1
	je	SHORT $LN16@GetRMOInde
	jmp	$LN5@GetRMOInde
$LN14@GetRMOInde:

; 248  : 		{
; 249  : 			case SGSM_CYCLIC:
; 250  : 				for (k=0; k<FreeRMOIndexList.GetCount(); k++)

	mov	DWORD PTR _k$3[ebp], 0
	jmp	SHORT $LN9@GetRMOInde
$LN7@GetRMOInde:
	mov	eax, DWORD PTR _k$3[ebp]
	add	eax, 1
	mov	DWORD PTR _k$3[ebp], eax
$LN9@GetRMOInde:
	mov	ecx, DWORD PTR _FreeRMOIndexList$[ebp]
	call	?GetCount@TCSUI32DualList@@QAEHXZ	; TCSUI32DualList::GetCount
	cmp	DWORD PTR _k$3[ebp], eax
	jge	SHORT $LN8@GetRMOInde

; 251  : 				{
; 252  : 					if (!SGList[pos]->RMOIndexList.ValueInList(FreeRMOIndexList.GetData1(k))) continue;

	mov	eax, DWORD PTR _k$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _FreeRMOIndexList$[ebp]
	call	?GetData1@TCSUI32DualList@@QAEIH@Z	; TCSUI32DualList::GetData1
	push	eax
	mov	ecx, DWORD PTR _pos$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 56					; 00000038H
	mov	ecx, eax
	call	?ValueInList@TUIList@@QBE_NI@Z		; TUIList::ValueInList
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN15@GetRMOInde
	jmp	SHORT $LN7@GetRMOInde
$LN15@GetRMOInde:

; 253  : 					return k;

	mov	eax, DWORD PTR _k$3[ebp]
	jmp	SHORT $LN1@GetRMOInde

; 254  : 				};

	jmp	SHORT $LN7@GetRMOInde
$LN8@GetRMOInde:

; 255  : 				break;

	jmp	SHORT $LN5@GetRMOInde
$LN16@GetRMOInde:

; 256  : 			case SGSM_SUC:
; 257  : 				for (k=0; k<SGList[pos]->RMIDOrder.GetSize(); k++)

	mov	DWORD PTR _k$3[ebp], 0
	jmp	SHORT $LN12@GetRMOInde
$LN10@GetRMOInde:
	mov	eax, DWORD PTR _k$3[ebp]
	add	eax, 1
	mov	DWORD PTR _k$3[ebp], eax
$LN12@GetRMOInde:
	mov	eax, DWORD PTR _pos$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 36					; 00000024H
	mov	ecx, eax
	call	?GetSize@TUIList@@QBEIXZ		; TUIList::GetSize
	cmp	DWORD PTR _k$3[ebp], eax
	jae	SHORT $LN5@GetRMOInde

; 258  : 				{
; 259  : 					p = FreeRMOIndexList.GetIndexForD2(SGList[pos]->RMIDOrder[k]);

	mov	eax, DWORD PTR _k$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 36					; 00000024H
	mov	ecx, eax
	call	??ATUIList@@QAEAAII@Z			; TUIList::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _FreeRMOIndexList$[ebp]
	call	?GetIndexForD2@TCSUI32DualList@@QAEHI@Z	; TCSUI32DualList::GetIndexForD2
	mov	DWORD PTR _p$2[ebp], eax

; 260  : 					if (p==-1) continue;

	cmp	DWORD PTR _p$2[ebp], -1
	jne	SHORT $LN17@GetRMOInde
	jmp	SHORT $LN10@GetRMOInde
$LN17@GetRMOInde:

; 261  : 					return p;

	mov	eax, DWORD PTR _p$2[ebp]
	jmp	SHORT $LN1@GetRMOInde

; 262  : 				};

	jmp	SHORT $LN10@GetRMOInde
$LN5@GetRMOInde:

; 263  : 				break;
; 264  : 			case SGSM_RANDOM:
; 265  : 				break;
; 266  : 		};
; 267  : 		return -1;

	or	eax, -1
	jmp	SHORT $LN1@GetRMOInde

; 268  : 	};

	jmp	$LN2@GetRMOInde
$LN3@GetRMOInde:

; 269  : 	return -1;

	or	eax, -1
$LN1@GetRMOInde:

; 270  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetRMOIndexForCallServ@CServiceGroupList@@QAEHAAVTCSUI32DualList@@I@Z ENDP ; CServiceGroupList::GetRMOIndexForCallServ
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?GetActiveRMCountInSG@CServiceGroupList@@QAEIII@Z
_TEXT	SEGMENT
_pos$1 = -32						; size = 4
_ret$ = -20						; size = 4
_this$ = -8						; size = 4
_SGUID$ = 8						; size = 4
_ActCount$ = 12						; size = 4
?GetActiveRMCountInSG@CServiceGroupList@@QAEIII@Z PROC	; CServiceGroupList::GetActiveRMCountInSG, COMDAT
; _this$ = ecx

; 219  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 	if (ActCount==0) return 0;

	cmp	DWORD PTR _ActCount$[ebp], 0
	jne	SHORT $LN5@GetActiveR
	xor	eax, eax
	jmp	$LN1@GetActiveR
$LN5@GetActiveR:

; 221  : unsigned ret;
; 222  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@GetActiveR
$LN2@GetActiveR:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@GetActiveR:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	$LN3@GetActiveR

; 223  : 		if (SGList[pos]->SGID==SGUID)

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _SGUID$[ebp]
	jne	SHORT $LN6@GetActiveR

; 224  : 		{
; 225  : 			ret = ActCount;

	mov	eax, DWORD PTR _ActCount$[ebp]
	mov	DWORD PTR _ret$[ebp], eax

; 226  : 			if (SGList[pos]->UseQueue)

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	je	SHORT $LN7@GetActiveR

; 227  : 			{
; 228  : 				if (SGList[pos]->UsingQueueByOperatorCount && 
; 229  : 					(SGList[pos]->OperatorCount<=ActCount) || ret==0)

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	movzx	ecx, BYTE PTR [eax+50]
	test	ecx, ecx
	je	SHORT $LN11@GetActiveR
	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	movzx	ecx, BYTE PTR [eax+51]
	cmp	ecx, DWORD PTR _ActCount$[ebp]
	jbe	SHORT $LN10@GetActiveR
$LN11@GetActiveR:
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN8@GetActiveR
$LN10@GetActiveR:

; 230  : 				{ }
; 231  : 				else

	jmp	SHORT $LN7@GetActiveR
$LN8@GetActiveR:

; 232  : 				ret += SGList[pos]->QueueType;

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	movzx	ecx, BYTE PTR [eax+49]
	add	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR _ret$[ebp], ecx
$LN7@GetActiveR:

; 233  : 			};
; 234  : 			return ret;

	mov	eax, DWORD PTR _ret$[ebp]
	jmp	SHORT $LN1@GetActiveR
$LN6@GetActiveR:

; 235  : 		};

	jmp	$LN2@GetActiveR
$LN3@GetActiveR:

; 236  : 	return 0;

	xor	eax, eax
$LN1@GetActiveR:

; 237  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetActiveRMCountInSG@CServiceGroupList@@QAEIII@Z ENDP	; CServiceGroupList::GetActiveRMCountInSG
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?DecAOCounter@CServiceGroupList@@QAEXI@Z
_TEXT	SEGMENT
tv80 = -220						; size = 4
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_SGUID$ = 8						; size = 4
?DecAOCounter@CServiceGroupList@@QAEXI@Z PROC		; CServiceGroupList::DecAOCounter, COMDAT
; _this$ = ecx

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@DecAOCount
$LN2@DecAOCount:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@DecAOCount:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	$LN1@DecAOCount

; 209  : 		if (SGList[pos]->SGID==SGUID)

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _SGUID$[ebp]
	jne	$LN5@DecAOCount

; 210  : 		{
; 211  : 			SGList[pos]->ActiveOperatorCounter--;

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 52					; 00000034H
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR [eax], edx

; 212  : 			PostSysMessage(SCMD_CHECKSLCOUNT, 0, -1, SGList[pos]->SGID);

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	65535					; 0000ffffH
	push	0
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 213  : 			FLOG << time << "SG:" << (unsigned)SGList[pos]->SGID << " OC:" << SGList[pos]->ActiveOperatorCounter << endl;

	push	OFFSET ?endl@@YAAAVCSysOut@@AAV1@@Z	; endl
	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	push	OFFSET ??_C@_04GMBOICGN@?5OC?3?$AA@
	mov	edx, DWORD PTR _pos$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	OFFSET ??_C@_03FHHPMFJD@SG?3?$AA@
	push	OFFSET ?time@@YAAAVCSysOut@@AAV1@@Z	; time
	mov	ecx, OFFSET ?FLOG@@3VCSysOut@@A		; FLOG
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@PBD@Z		; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@I@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@PBD@Z		; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@I@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<

; 214  : 			break;

	jmp	SHORT $LN1@DecAOCount
$LN5@DecAOCount:

; 215  : 		};

	jmp	$LN2@DecAOCount
$LN1@DecAOCount:

; 216  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DecAOCounter@CServiceGroupList@@QAEXI@Z ENDP		; CServiceGroupList::DecAOCounter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?DecAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z
_TEXT	SEGMENT
tv85 = -220						; size = 4
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_CRMO$ = 8						; size = 4
?DecAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z PROC ; CServiceGroupList::DecAOCounter, COMDAT
; _this$ = ecx

; 194  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@DecAOCount
$LN2@DecAOCount:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@DecAOCount:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	$LN1@DecAOCount

; 196  : 	{
; 197  : 		if (CRMO->ServiceGroupsList.ValueInList(SGList[pos]->SGID))

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _CRMO$[ebp]
	add	ecx, 16					; 00000010H
	call	?ValueInList@TUIList@@QBE_NI@Z		; TUIList::ValueInList
	movzx	edx, al
	test	edx, edx
	je	$LN5@DecAOCount

; 198  : 		{
; 199  : 			SGList[pos]->ActiveOperatorCounter--;

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 52					; 00000034H
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR [eax], edx

; 200  : 			PostSysMessage(SCMD_CHECKSLCOUNT, 0, -1, SGList[pos]->SGID);

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	65535					; 0000ffffH
	push	0
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 201  : 			FLOG << time << "SG:" << (unsigned)SGList[pos]->SGID << " OC:" << SGList[pos]->ActiveOperatorCounter << endl;

	push	OFFSET ?endl@@YAAAVCSysOut@@AAV1@@Z	; endl
	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	push	OFFSET ??_C@_04GMBOICGN@?5OC?3?$AA@
	mov	edx, DWORD PTR _pos$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	OFFSET ??_C@_03FHHPMFJD@SG?3?$AA@
	push	OFFSET ?time@@YAAAVCSysOut@@AAV1@@Z	; time
	mov	ecx, OFFSET ?FLOG@@3VCSysOut@@A		; FLOG
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@PBD@Z		; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@I@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@PBD@Z		; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@I@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<
$LN5@DecAOCount:

; 202  : 		};
; 203  : 	};

	jmp	$LN2@DecAOCount
$LN1@DecAOCount:

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DecAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z ENDP ; CServiceGroupList::DecAOCounter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?IncAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z
_TEXT	SEGMENT
tv85 = -220						; size = 4
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_CRMO$ = 8						; size = 4
?IncAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z PROC ; CServiceGroupList::IncAOCounter, COMDAT
; _this$ = ecx

; 181  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@IncAOCount
$LN2@IncAOCount:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@IncAOCount:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	$LN1@IncAOCount

; 183  : 	{
; 184  : 		if (CRMO->ServiceGroupsList.ValueInList(SGList[pos]->SGID))

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _CRMO$[ebp]
	add	ecx, 16					; 00000010H
	call	?ValueInList@TUIList@@QBE_NI@Z		; TUIList::ValueInList
	movzx	edx, al
	test	edx, edx
	je	$LN5@IncAOCount

; 185  : 		{
; 186  : 			SGList[pos]->ActiveOperatorCounter++;

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 52					; 00000034H
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR [eax], edx

; 187  : 			PostSysMessage(SCMD_CHECKSLCOUNT, 0, -1, SGList[pos]->SGID);

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	65535					; 0000ffffH
	push	0
	push	67					; 00000043H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 188  : 			FLOG << time << "SG:" << (unsigned)SGList[pos]->SGID << " OC:" << SGList[pos]->ActiveOperatorCounter << endl;

	push	OFFSET ?endl@@YAAAVCSysOut@@AAV1@@Z	; endl
	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	push	OFFSET ??_C@_04GMBOICGN@?5OC?3?$AA@
	mov	edx, DWORD PTR _pos$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	OFFSET ??_C@_03FHHPMFJD@SG?3?$AA@
	push	OFFSET ?time@@YAAAVCSysOut@@AAV1@@Z	; time
	mov	ecx, OFFSET ?FLOG@@3VCSysOut@@A		; FLOG
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@PBD@Z		; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@I@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@PBD@Z		; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@I@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<
$LN5@IncAOCount:

; 189  : 		}
; 190  : 	};

	jmp	$LN2@IncAOCount
$LN1@IncAOCount:

; 191  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IncAOCounter@CServiceGroupList@@QAEXPAVCRMOStoredData@@@Z ENDP ; CServiceGroupList::IncAOCounter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?UnregisterOperator@CServiceGroupList@@QAEXI@Z
_TEXT	SEGMENT
_pos$1 = -32						; size = 4
_k$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?UnregisterOperator@CServiceGroupList@@QAEXI@Z PROC	; CServiceGroupList::UnregisterOperator, COMDAT
; _this$ = ecx

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 172  : int k;
; 173  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@Unregister
$LN2@Unregister:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@Unregister:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	SHORT $LN1@Unregister

; 174  : 	{
; 175  : 		k = SGList[pos]->RMOIndexList.GetIndexFor(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 56					; 00000038H
	mov	ecx, eax
	call	?GetIndexFor@TUIList@@QAEHI@Z		; TUIList::GetIndexFor
	mov	DWORD PTR _k$[ebp], eax

; 176  : 		if (k!=-1) SGList[pos]->RMOIndexList.Delete(k);

	cmp	DWORD PTR _k$[ebp], -1
	je	SHORT $LN5@Unregister
	mov	eax, DWORD PTR _k$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 56					; 00000038H
	mov	ecx, eax
	call	?Delete@TUIList@@QAE_NI@Z		; TUIList::Delete
$LN5@Unregister:

; 177  : 	};

	jmp	SHORT $LN2@Unregister
$LN1@Unregister:

; 178  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?UnregisterOperator@CServiceGroupList@@QAEXI@Z ENDP	; CServiceGroupList::UnregisterOperator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?RegisterOperator@CServiceGroupList@@QAEXIAAVTUIList@@@Z
_TEXT	SEGMENT
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_UIL$ = 12						; size = 4
?RegisterOperator@CServiceGroupList@@QAEXIAAVTUIList@@@Z PROC ; CServiceGroupList::RegisterOperator, COMDAT
; _this$ = ecx

; 162  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 	for (unsigned pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@RegisterOp
$LN2@RegisterOp:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@RegisterOp:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	SHORT $LN1@RegisterOp

; 164  : 	{
; 165  : 		if (UIL.ValueInList(SGList[pos]->SGID) && !SGList[pos]->RMOIndexList.ValueInList(index))

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _UIL$[ebp]
	call	?ValueInList@TUIList@@QBE_NI@Z		; TUIList::ValueInList
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@RegisterOp
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 56					; 00000038H
	mov	ecx, eax
	call	?ValueInList@TUIList@@QBE_NI@Z		; TUIList::ValueInList
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@RegisterOp

; 166  : 			SGList[pos]->RMOIndexList.Add(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 56					; 00000038H
	mov	ecx, eax
	call	?Add@TUIList@@QAE_NI@Z			; TUIList::Add
$LN5@RegisterOp:

; 167  : 	};

	jmp	SHORT $LN2@RegisterOp
$LN1@RegisterOp:

; 168  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RegisterOperator@CServiceGroupList@@QAEXIAAVTUIList@@@Z ENDP ; CServiceGroupList::RegisterOperator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?SaveInfoForBanner@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
_SGUID$ = 8						; size = 4
_TND$ = 12						; size = 4
?SaveInfoForBanner@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CServiceGroupList::SaveInfoForBanner, COMDAT
; _this$ = ecx

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 151  : unsigned pos;
; 152  : 	for (pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$[ebp], 0
	jmp	SHORT $LN4@SaveInfoFo
$LN2@SaveInfoFo:
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN4@SaveInfoFo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$[ebp], eax
	jae	SHORT $LN3@SaveInfoFo

; 153  : 		if (SGList[pos]->SGID==SGUID)

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _SGUID$[ebp]
	jne	SHORT $LN5@SaveInfoFo

; 154  : 		{
; 155  : 			(*TND) << SGList[pos]->SGCaption << SGList[pos]->Color << SGList[pos]->BlinkBanner;

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 24					; 00000018H
	push	eax
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 8
	push	eax
	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
	add	esp, 8
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABK@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z ; TFixedSizeBinaryData<4096>::operator<<

; 156  : 			return true;

	mov	al, 1
	jmp	SHORT $LN1@SaveInfoFo
$LN5@SaveInfoFo:

; 157  : 		};

	jmp	$LN2@SaveInfoFo
$LN3@SaveInfoFo:

; 158  : 	return false;

	xor	al, al
$LN1@SaveInfoFo:

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveInfoForBanner@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CServiceGroupList::SaveInfoForBanner
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
tv157 = -304						; size = 4
$T2 = -296						; size = 4
$T3 = -284						; size = 4
_CSG$ = -80						; size = 4
_i$4 = -68						; size = 4
_NUIDMustBeChange$ = -53				; size = 1
_NUID$ = -44						; size = 4
_pos$5 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_SGUID$ = 8						; size = 4
_TND$ = 12						; size = 4
?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CServiceGroupList::LoadFrom, COMDAT
; _this$ = ecx

; 113  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 	if (SGUID!=0xFFFFFFFF)

	cmp	DWORD PTR _SGUID$[ebp], -1
	je	$LN11@LoadFrom

; 115  : 	{
; 116  : 	unsigned pos;
; 117  : 		for (pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$5[ebp], 0
	jmp	SHORT $LN4@LoadFrom
$LN2@LoadFrom:
	mov	eax, DWORD PTR _pos$5[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$5[ebp], eax
$LN4@LoadFrom:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$5[ebp], eax
	jae	SHORT $LN3@LoadFrom

; 118  : 			if (SGList[pos]->SGID==SGUID) break;

	mov	eax, DWORD PTR _pos$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _SGUID$[ebp]
	jne	SHORT $LN12@LoadFrom
	jmp	SHORT $LN3@LoadFrom
$LN12@LoadFrom:

; 119  : 		SGList[pos]->LoadFrom(TND);

	jmp	SHORT $LN2@LoadFrom
$LN3@LoadFrom:
	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, eax
	call	?LoadFrom@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroup::LoadFrom

; 120  : 		PostSysMessage(SCMD_SAVEPROFILE);

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 121  : 		PostSysMessage(SCMD_RELOADSGPROFILE, 0, 0, SGUID);

	mov	eax, DWORD PTR _SGUID$[ebp]
	push	eax
	push	0
	push	0
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 122  : 		return true;

	mov	al, 1
	jmp	$LN1@LoadFrom
$LN11@LoadFrom:

; 123  : 	};
; 124  : 
; 125  : unsigned __int32 NUID = 10;

	mov	DWORD PTR _NUID$[ebp], 10		; 0000000aH

; 126  : bool NUIDMustBeChange=false;

	mov	BYTE PTR _NUIDMustBeChange$[ebp], 0
$LN7@LoadFrom:

; 127  : 	for (;;)
; 128  : 	{
; 129  : 		for (unsigned i=0; i<SGList.GetCount(); i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN10@LoadFrom
$LN8@LoadFrom:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN10@LoadFrom:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _i$4[ebp], eax
	jae	SHORT $LN9@LoadFrom

; 130  : 			if (SGList[i]->SGID==NUID) 

	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _NUID$[ebp]
	jne	SHORT $LN13@LoadFrom

; 131  : 			{
; 132  : 				NUIDMustBeChange = true;

	mov	BYTE PTR _NUIDMustBeChange$[ebp], 1

; 133  : 				break;

	jmp	SHORT $LN9@LoadFrom
$LN13@LoadFrom:

; 134  : 			};

	jmp	SHORT $LN8@LoadFrom
$LN9@LoadFrom:

; 135  : 		if (NUIDMustBeChange==false) break;

	movzx	eax, BYTE PTR _NUIDMustBeChange$[ebp]
	test	eax, eax
	jne	SHORT $LN14@LoadFrom
	jmp	SHORT $LN6@LoadFrom
$LN14@LoadFrom:

; 136  : 		NUID++;

	mov	eax, DWORD PTR _NUID$[ebp]
	add	eax, 1
	mov	DWORD PTR _NUID$[ebp], eax

; 137  : 		NUIDMustBeChange = false;

	mov	BYTE PTR _NUIDMustBeChange$[ebp], 0

; 138  : 	};

	jmp	SHORT $LN7@LoadFrom
$LN6@LoadFrom:

; 139  : 
; 140  : CServiceGroup *CSG = new CServiceGroup;

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN16@LoadFrom
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CServiceGroup@@QAE@XZ		; CServiceGroup::CServiceGroup
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN17@LoadFrom
$LN16@LoadFrom:
	mov	DWORD PTR tv157[ebp], 0
$LN17@LoadFrom:
	mov	eax, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _CSG$[ebp], ecx

; 141  : 	CSG->LoadFrom(TND);

	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CSG$[ebp]
	call	?LoadFrom@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroup::LoadFrom

; 142  : 	CSG->SGID = NUID;

	mov	eax, DWORD PTR _CSG$[ebp]
	mov	ecx, DWORD PTR _NUID$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 143  : 	SGList.Add(CSG);

	mov	eax, DWORD PTR _CSG$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Add@?$TPtrList@VCServiceGroup@@@@QAEXPAVCServiceGroup@@@Z ; TPtrList<CServiceGroup>::Add

; 144  : 	PostSysMessage(SCMD_SAVEPROFILE);

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 145  : 	PostSysMessage(SCMD_RELOADSGPROFILE, 0, 0, SGUID);

	mov	eax, DWORD PTR _SGUID$[ebp]
	push	eax
	push	0
	push	0
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 146  : 	return true;

	mov	al, 1
$LN1@LoadFrom:

; 147  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z$0:
	push	72					; 00000048H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadFrom@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CServiceGroupList::LoadFrom
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?SaveTo@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
_SGUID$ = 8						; size = 4
_TND$ = 12						; size = 4
?SaveTo@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CServiceGroupList::SaveTo, COMDAT
; _this$ = ecx

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 102  : unsigned pos;
; 103  : 	for (pos=0; pos<SGList.GetCount(); pos++)

	mov	DWORD PTR _pos$[ebp], 0
	jmp	SHORT $LN4@SaveTo
$LN2@SaveTo:
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN4@SaveTo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _pos$[ebp], eax
	jae	SHORT $LN3@SaveTo

; 104  : 		if (SGList[pos]->SGID==SGUID)

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _SGUID$[ebp]
	jne	SHORT $LN5@SaveTo

; 105  : 		{
; 106  : 			SGList[pos]->SaveTo(TND);

	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, eax
	call	?SaveTo@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CServiceGroup::SaveTo

; 107  : 			return true;

	mov	al, 1
	jmp	SHORT $LN1@SaveTo
$LN5@SaveTo:

; 108  : 		};

	jmp	SHORT $LN2@SaveTo
$LN3@SaveTo:

; 109  : 	return false;

	xor	al, al
$LN1@SaveTo:

; 110  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveTo@CServiceGroupList@@QAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CServiceGroupList::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?SaveSGUIDListTo@CServiceGroupList@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_i$2 = -20						; size = 4
_this$ = -8						; size = 4
_TND$ = 8						; size = 4
?SaveSGUIDListTo@CServiceGroupList@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CServiceGroupList::SaveSGUIDListTo, COMDAT
; _this$ = ecx

; 94   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 	(*TND) << SGList.GetCount();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<

; 96   : 	for (unsigned i=0; i<SGList.GetCount(); i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@SaveSGUIDL
$LN2@SaveSGUIDL:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@SaveSGUIDL:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _i$2[ebp], eax
	jae	SHORT $LN1@SaveSGUIDL

; 97   : 		(*TND) << SGList[i]->SGID << SGList[i]->SGCaption;

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _i$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
	add	esp, 8
	jmp	SHORT $LN2@SaveSGUIDL
$LN1@SaveSGUIDL:

; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveSGUIDListTo@CServiceGroupList@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CServiceGroupList::SaveSGUIDListTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
tv81 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
_i$4 = -56						; size = 4
_CSG$ = -44						; size = 4
_Size$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_TBD$ = 8						; size = 4
?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z PROC ; CServiceGroupList::LoadFrom, COMDAT
; _this$ = ecx

; 79   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 	SGList.Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Reset@?$TPtrList@VCServiceGroup@@@@QAEXXZ ; TPtrList<CServiceGroup>::Reset

; 81   : unsigned __int32 Size;
; 82   : CServiceGroup *CSG;
; 83   : 	(*TBD) >> Size;

	lea	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>

; 84   : 	for (int i=0; i<Size; i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@LoadFrom
$LN2@LoadFrom:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@LoadFrom:
	mov	eax, DWORD PTR _i$4[ebp]
	cmp	eax, DWORD PTR _Size$[ebp]
	jae	SHORT $LN1@LoadFrom

; 85   : 	{
; 86   : 		CSG = new CServiceGroup;

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@LoadFrom
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CServiceGroup@@QAE@XZ		; CServiceGroup::CServiceGroup
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@LoadFrom
$LN6@LoadFrom:
	mov	DWORD PTR tv81[ebp], 0
$LN7@LoadFrom:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _CSG$[ebp], ecx

; 87   : 		CSG->LoadFrom(TBD);

	mov	eax, DWORD PTR _TBD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CSG$[ebp]
	call	?LoadFrom@CServiceGroup@@QAEXPAVTBinaryData@@@Z ; CServiceGroup::LoadFrom

; 88   : 		SGList.Add(CSG);

	mov	eax, DWORD PTR _CSG$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Add@?$TPtrList@VCServiceGroup@@@@QAEXPAVCServiceGroup@@@Z ; TPtrList<CServiceGroup>::Add

; 89   : 	};

	jmp	$LN2@LoadFrom
$LN1@LoadFrom:

; 90   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@LoadFrom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@LoadFrom:
	DD	1
	DD	$LN11@LoadFrom
$LN11@LoadFrom:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@LoadFrom
$LN9@LoadFrom:
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z$0:
	push	72					; 00000048H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadFrom@CServiceGroupList@@QAEXPAVTBinaryData@@@Z ENDP ; CServiceGroupList::LoadFrom
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?SaveTo@CServiceGroupList@@QAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_i$2 = -20						; size = 4
_this$ = -8						; size = 4
_TBD$ = 8						; size = 4
?SaveTo@CServiceGroupList@@QAEXPAVTBinaryData@@@Z PROC	; CServiceGroupList::SaveTo, COMDAT
; _this$ = ecx

; 70   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 	(*TBD) << SGList.GetCount();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<

; 72   : 	for (int i=0; i<SGList.GetCount(); i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@SaveTo
$LN2@SaveTo:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@SaveTo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCServiceGroup@@@@QAEIXZ ; TPtrList<CServiceGroup>::GetCount
	cmp	DWORD PTR _i$2[ebp], eax
	jae	SHORT $LN1@SaveTo

; 73   : 	{
; 74   : 		SGList[i]->SaveTo(TBD);

	mov	eax, DWORD PTR _TBD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCServiceGroup@@@@QAEPAVCServiceGroup@@I@Z ; TPtrList<CServiceGroup>::operator[]
	mov	ecx, eax
	call	?SaveTo@CServiceGroup@@QAEXPAVTBinaryData@@@Z ; CServiceGroup::SaveTo

; 75   : 	};

	jmp	SHORT $LN2@SaveTo
$LN1@SaveTo:

; 76   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveTo@CServiceGroupList@@QAEXPAVTBinaryData@@@Z ENDP	; CServiceGroupList::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ??1CServiceGroupList@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CServiceGroupList@@UAE@XZ PROC			; CServiceGroupList::~CServiceGroupList, COMDAT
; _this$ = ecx

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CServiceGroupList@@6B@

; 67   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$TPtrList@VCServiceGroup@@@@QAE@XZ	; TPtrList<CServiceGroup>::~TPtrList<CServiceGroup>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CServiceGroupList@@UAE@XZ ENDP			; CServiceGroupList::~CServiceGroupList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ??0CServiceGroupList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CServiceGroupList@@QAE@XZ PROC			; CServiceGroupList::CServiceGroupList, COMDAT
; _this$ = ecx

; 62   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CServiceGroupList@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$TPtrList@VCServiceGroup@@@@QAE@XZ	; TPtrList<CServiceGroup>::TPtrList<CServiceGroup>

; 63   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CServiceGroupList@@QAE@XZ ENDP			; CServiceGroupList::CServiceGroupList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCServiceGroup@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCServiceGroup@@UAEPAXI@Z PROC			; CServiceGroup::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CServiceGroup@@UAE@XZ		; CServiceGroup::~CServiceGroup
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	72					; 00000048H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCServiceGroup@@UAEPAXI@Z ENDP			; CServiceGroup::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?LoadFrom@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TND$ = 8						; size = 4
?LoadFrom@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CServiceGroup::LoadFrom, COMDAT
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   : 	(*TND) 	>> SGID >> SGCaption >>

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 51					; 00000033H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 50					; 00000032H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 49					; 00000031H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ; TFixedSizeBinaryData<4096>::operator>>
	push	eax
	call	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator>><4096>
	add	esp, 8
	push	eax
	call	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator>><4096>
	add	esp, 8
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAK@Z ; TFixedSizeBinaryData<4096>::operator>>
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z ; TFixedSizeBinaryData<4096>::operator>>
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAH@Z ; TFixedSizeBinaryData<4096>::operator>>
	push	eax
	call	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator>><4096>
	add	esp, 8
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z ; TFixedSizeBinaryData<4096>::operator>>
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ; TFixedSizeBinaryData<4096>::operator>>
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AA_N@Z ; TFixedSizeBinaryData<4096>::operator>>
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ; TFixedSizeBinaryData<4096>::operator>>

; 54   : 			SGDescription >> Color >> BlinkBanner >> SGSearchMethod >> RMIDOrder >>
; 55   : 			UseQueue >> QueueType >> UsingQueueByOperatorCount >> OperatorCount;
; 56   : 	LastUsingRMOPos = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0

; 57   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadFrom@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CServiceGroup::LoadFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?SaveTo@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
_this$ = -8						; size = 4
_TND$ = 8						; size = 4
?SaveTo@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CServiceGroup::SaveTo, COMDAT
; _this$ = ecx

; 44   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 	(*TND) << SGID << SGCaption << 

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR $T4[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 51					; 00000033H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 50					; 00000032H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 49					; 00000031H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
	add	esp, 8
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
	add	esp, 8
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABK@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABH@Z ; TFixedSizeBinaryData<4096>::operator<<
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator<<<4096>
	add	esp, 8
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AB_N@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<

; 46   : 			SGDescription << Color << BlinkBanner << SGSearchMethod << RMIDOrder <<
; 47   : 			UseQueue << QueueType << UsingQueueByOperatorCount << OperatorCount << 
; 48   : /**/		(unsigned)0 << (unsigned)0 << (unsigned)0 << (unsigned)0; /* for future using */
; 49   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveTo@CServiceGroup@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CServiceGroup::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?LoadFrom@CServiceGroup@@QAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
_kkk$ = -20						; size = 4
_this$ = -8						; size = 4
_TBD$ = 8						; size = 4
?LoadFrom@CServiceGroup@@QAEXPAVTBinaryData@@@Z PROC	; CServiceGroup::LoadFrom, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : unsigned kkk;
; 36   : 	(*TBD) >> SGID >> SGCaption >>

	lea	eax, DWORD PTR _kkk$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kkk$[ebp]
	push	ecx
	lea	edx, DWORD PTR _kkk$[ebp]
	push	edx
	lea	eax, DWORD PTR _kkk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 51					; 00000033H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 50					; 00000032H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 49					; 00000031H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>
	push	eax
	call	??5@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z ; operator>>
	add	esp, 8
	push	eax
	call	??5@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z ; operator>>
	add	esp, 8
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAK@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AA_N@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAH@Z		; TBinaryData::operator>>
	push	eax
	call	??5@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z ; operator>>
	add	esp, 8
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AA_N@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAE@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AA_N@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAE@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>

; 37   : 			SGDescription >> Color >> BlinkBanner >> SGSearchMethod >> RMIDOrder >>
; 38   : 			UseQueue >> QueueType >> UsingQueueByOperatorCount >> OperatorCount >>
; 39   : 			kkk >> kkk >> kkk >> kkk;
; 40   : 	LastUsingRMOPos = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0

; 41   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@LoadFrom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@LoadFrom:
	DD	1
	DD	$LN4@LoadFrom
$LN4@LoadFrom:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@LoadFrom
$LN3@LoadFrom:
	DB	107					; 0000006bH
	DB	107					; 0000006bH
	DB	107					; 0000006bH
	DB	0
?LoadFrom@CServiceGroup@@QAEXPAVTBinaryData@@@Z ENDP	; CServiceGroup::LoadFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?SaveTo@CServiceGroup@@QAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
$T4 = -212						; size = 4
_this$ = -8						; size = 4
_TBD$ = 8						; size = 4
?SaveTo@CServiceGroup@@QAEXPAVTBinaryData@@@Z PROC	; CServiceGroup::SaveTo, COMDAT
; _this$ = ecx

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 27   : 	(*TBD) << SGID << SGCaption << 

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR $T4[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 51					; 00000033H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 50					; 00000032H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 49					; 00000031H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<
	push	eax
	call	??6@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z ; operator<<
	add	esp, 8
	push	eax
	call	??6@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z ; operator<<
	add	esp, 8
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABK@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@AB_N@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABH@Z		; TBinaryData::operator<<
	push	eax
	call	??6@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z ; operator<<
	add	esp, 8
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@AB_N@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABE@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@AB_N@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABE@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<

; 28   : 			SGDescription << Color << BlinkBanner << SGSearchMethod << RMIDOrder <<
; 29   : 			UseQueue << QueueType << UsingQueueByOperatorCount << OperatorCount << 
; 30   : /**/		(unsigned)0 << (unsigned)0 << (unsigned)0 << (unsigned)0; /* for future using */
; 31   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveTo@CServiceGroup@@QAEXPAVTBinaryData@@@Z ENDP	; CServiceGroup::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ??1CServiceGroup@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CServiceGroup@@UAE@XZ PROC				; CServiceGroup::~CServiceGroup, COMDAT
; _this$ = ecx

; 21   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CServiceGroup@@6B@

; 22   : 
; 23   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1TUIList@@QAE@XZ			; TUIList::~TUIList
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1TUIList@@QAE@XZ			; TUIList::~TUIList
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CServiceGroup@@UAE@XZ ENDP				; CServiceGroup::~CServiceGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ??0CServiceGroup@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CServiceGroup@@QAE@XZ PROC				; CServiceGroup::CServiceGroup, COMDAT
; _this$ = ecx

; 15   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CServiceGroup@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CServiceGroup@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0TZSuperShortString@@QAE@XZ		; TZSuperShortString::TZSuperShortString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0TZSuperShortString@@QAE@XZ		; TZSuperShortString::TZSuperShortString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0TUIList@@QAE@XZ			; TUIList::TUIList
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0TUIList@@QAE@XZ			; TUIList::TUIList

; 16   : 	LastUsingRMOPos = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0

; 17   : 	ActiveOperatorCounter = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 18   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CServiceGroup@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
__unwindfunclet$??0CServiceGroup@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
__unwindfunclet$??0CServiceGroup@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1TUIList@@QAE@XZ			; TUIList::~TUIList
__ehhandler$??0CServiceGroup@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CServiceGroup@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CServiceGroup@@QAE@XZ ENDP				; CServiceGroup::CServiceGroup
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tzssstring.h
;	COMDAT ?c_str@TZSuperShortString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@TZSuperShortString@@QBEPBDXZ PROC		; TZSuperShortString::c_str, COMDAT
; _this$ = ecx

; 29   : 	inline const char *c_str(void) const { return str; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@TZSuperShortString@@QBEPBDXZ ENDP		; TZSuperShortString::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\sysout.h
;	COMDAT ?endl@@YAAAVCSysOut@@AAV1@@Z
_TEXT	SEGMENT
__outs$ = 8						; size = 4
?endl@@YAAAVCSysOut@@AAV1@@Z PROC			; endl, COMDAT

; 59   : inline CSysOut& __cdecl endl(CSysOut& _outs) { return _outs << '\n' << flush; }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ?flush@@YAAAVCSysOut@@AAV1@@Z	; flush
	push	10					; 0000000aH
	mov	ecx, DWORD PTR __outs$[ebp]
	call	??6CSysOut@@QAEAAV0@D@Z			; CSysOut::operator<<
	mov	ecx, eax
	call	??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z	; CSysOut::operator<<
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?endl@@YAAAVCSysOut@@AAV1@@Z ENDP			; endl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\sysout.h
;	COMDAT ?flush@@YAAAVCSysOut@@AAV1@@Z
_TEXT	SEGMENT
__outs$ = 8						; size = 4
?flush@@YAAAVCSysOut@@AAV1@@Z PROC			; flush, COMDAT

; 58   : inline CSysOut& __cdecl flush(CSysOut& _outs) { return _outs.flush(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR __outs$[ebp]
	call	?flush@CSysOut@@QAEAAV1@XZ		; CSysOut::flush
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?flush@@YAAAVCSysOut@@AAV1@@Z ENDP			; flush
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\sysout.h
;	COMDAT ??6CSysOut@@QAEAAV0@D@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__c$ = 8						; size = 1
??6CSysOut@@QAEAAV0@D@Z PROC				; CSysOut::operator<<, COMDAT
; _this$ = ecx

; 52   : inline  CSysOut& CSysOut::operator<<(char _c) { return operator<<((unsigned char) _c); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR __c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CSysOut@@QAEAAV0@E@Z			; CSysOut::operator<<
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CSysOut@@QAEAAV0@D@Z ENDP				; CSysOut::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\sysout.h
;	COMDAT ??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__f$ = 8						; size = 4
??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z PROC		; CSysOut::operator<<, COMDAT
; _this$ = ecx

; 49   : inline CSysOut& CSysOut::operator<<(CSysOut& (__cdecl * _f)(CSysOut&)) { (*_f)(*this); return *this; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __f$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CSysOut@@QAEAAV0@P6AAAV0@AAV0@@Z@Z ENDP		; CSysOut::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\servicegroup.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
