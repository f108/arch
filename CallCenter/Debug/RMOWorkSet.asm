; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26131.1 

	TITLE	C:\Users\smith\Projects\CallCenter\RMOWorkSet.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?c_str@TZSuperShortString@@QBEPBDXZ		; TZSuperShortString::c_str
PUBLIC	??0CRMOStoredData@@QAE@XZ			; CRMOStoredData::CRMOStoredData
PUBLIC	?Reset@CRMOStoredData@@QAEXXZ			; CRMOStoredData::Reset
PUBLIC	?CopyFrom@CRMOStoredData@@QAEXPAV1@@Z		; CRMOStoredData::CopyFrom
PUBLIC	??1CRMOStoredData@@QAE@XZ			; CRMOStoredData::~CRMOStoredData
PUBLIC	??0CRMO@@QAE@XZ					; CRMO::CRMO
PUBLIC	??1CRMO@@UAE@XZ					; CRMO::~CRMO
PUBLIC	?SaveTo@CRMO@@QAEXPAVTBinaryData@@@Z		; CRMO::SaveTo
PUBLIC	?LoadFrom@CRMO@@QAEXPAVTBinaryData@@@Z		; CRMO::LoadFrom
PUBLIC	?SaveTo@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMO::SaveTo
PUBLIC	?LoadFrom@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMO::LoadFrom
PUBLIC	??_GCRMO@@UAEPAXI@Z				; CRMO::`scalar deleting destructor'
PUBLIC	??0CRMOList@@QAE@XZ				; CRMOList::CRMOList
PUBLIC	??1CRMOList@@UAE@XZ				; CRMOList::~CRMOList
PUBLIC	?SaveTo@CRMOList@@AAEXPAVTBinaryData@@@Z	; CRMOList::SaveTo
PUBLIC	?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z	; CRMOList::LoadFrom
PUBLIC	?SaveRMUIDListTo@CRMOList@@AAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMOList::SaveRMUIDListTo
PUBLIC	?SaveTo@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMOList::SaveTo
PUBLIC	?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMOList::LoadFrom
PUBLIC	?GetRMODataByUID@CRMOList@@AAEPAVCRMOStoredData@@I@Z ; CRMOList::GetRMODataByUID
PUBLIC	?GetRMODataByName@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@@Z ; CRMOList::GetRMODataByName
PUBLIC	?GetRMODataByNameAndType@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@I@Z ; CRMOList::GetRMODataByNameAndType
PUBLIC	?GetUserAttr@CRMOList@@AAEII@Z			; CRMOList::GetUserAttr
PUBLIC	?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ	; CRMOList::CreateDefaultStartUpProfile
PUBLIC	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ		; TPtrList<CRMO>::GetCount
PUBLIC	?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z	; TPtrList<CRMO>::Add
PUBLIC	?Reset@?$TPtrList@VCRMO@@@@QAEXXZ		; TPtrList<CRMO>::Reset
PUBLIC	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z		; TPtrList<CRMO>::operator[]
PUBLIC	??0?$TPtrList@VCRMO@@@@QAE@XZ			; TPtrList<CRMO>::TPtrList<CRMO>
PUBLIC	??1?$TPtrList@VCRMO@@@@QAE@XZ			; TPtrList<CRMO>::~TPtrList<CRMO>
PUBLIC	??_GCRMOList@@UAEPAXI@Z				; CRMOList::`scalar deleting destructor'
PUBLIC	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
PUBLIC	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ; TFixedSizeBinaryData<4096>::operator>>
PUBLIC	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom
PUBLIC	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo
PUBLIC	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator<<<4096>
PUBLIC	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
PUBLIC	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator>><4096>
PUBLIC	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator>><4096>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7CRMO@@6B@					; CRMO::`vftable'
PUBLIC	??_7CRMOList@@6B@				; CRMOList::`vftable'
PUBLIC	??_C@_03IHLFIOLK@MPL?$AA@			; `string'
PUBLIC	__TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	__CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8 ; TFixedSizeBinaryData<4096>::ENoDataForRead `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81
PUBLIC	??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8 ; TFixedSizeBinaryData<4096>::EFSBDException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
PUBLIC	__TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	__CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
PUBLIC	??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8 ; TFixedSizeBinaryData<4096>::EObjectTooLong `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81
PUBLIC	??_R4CRMO@@6B@					; CRMO::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRMO@@@8				; CRMO `RTTI Type Descriptor'
PUBLIC	??_R3CRMO@@8					; CRMO::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRMO@@8					; CRMO::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRMO@@8				; CRMO::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EN@CRMOStoredData@@8			; CRMOStoredData::`RTTI Base Class Descriptor at (4,-1,0,77)'
PUBLIC	??_R0?AVCRMOStoredData@@@8			; CRMOStoredData `RTTI Type Descriptor'
PUBLIC	??_R3CRMOStoredData@@8				; CRMOStoredData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRMOStoredData@@8				; CRMOStoredData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRMOStoredData@@8			; CRMOStoredData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRMOList@@6B@				; CRMOList::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRMOList@@@8				; CRMOList `RTTI Type Descriptor'
PUBLIC	??_R3CRMOList@@8				; CRMOList::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRMOList@@8				; CRMOList::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRMOList@@8			; CRMOList::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EN@CSystemObject@@8			; CSystemObject::`RTTI Base Class Descriptor at (4,-1,0,77)'
PUBLIC	??_R0?AVCSystemObject@@@8			; CSystemObject `RTTI Type Descriptor'
PUBLIC	??_R3CSystemObject@@8				; CSystemObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSystemObject@@8				; CSystemObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSystemObject@@8			; CSystemObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_memcpy:PROC
EXTRN	??6TBinaryData@@QAEAAV0@ABE@Z:PROC		; TBinaryData::operator<<
EXTRN	??6TBinaryData@@QAEAAV0@ABI@Z:PROC		; TBinaryData::operator<<
EXTRN	??5TBinaryData@@QAEAAV0@AAE@Z:PROC		; TBinaryData::operator>>
EXTRN	??5TBinaryData@@QAEAAV0@AAI@Z:PROC		; TBinaryData::operator>>
EXTRN	??0TZSuperShortString@@QAE@XZ:PROC		; TZSuperShortString::TZSuperShortString
EXTRN	??0TZSuperShortString@@QAE@PBD@Z:PROC		; TZSuperShortString::TZSuperShortString
EXTRN	??1TZSuperShortString@@QAE@XZ:PROC		; TZSuperShortString::~TZSuperShortString
EXTRN	?set_length@TZSuperShortString@@QAEEE@Z:PROC	; TZSuperShortString::set_length
EXTRN	?length@TZSuperShortString@@QBEEXZ:PROC		; TZSuperShortString::length
EXTRN	??4TZSuperShortString@@QAEXABV0@@Z:PROC		; TZSuperShortString::operator=
EXTRN	??8@YAHABVTZSuperShortString@@0@Z:PROC		; operator==
EXTRN	??6@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z:PROC ; operator<<
EXTRN	??5@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z:PROC ; operator>>
EXTRN	??0TUIList@@QAE@XZ:PROC				; TUIList::TUIList
EXTRN	??1TUIList@@QAE@XZ:PROC				; TUIList::~TUIList
EXTRN	?SetSize@TUIList@@QAE_NI@Z:PROC			; TUIList::SetSize
EXTRN	?GetSize@TUIList@@QBEIXZ:PROC			; TUIList::GetSize
EXTRN	?Reset@TUIList@@QAEXXZ:PROC			; TUIList::Reset
EXTRN	??4TUIList@@QAEXABV0@@Z:PROC			; TUIList::operator=
EXTRN	?Add@TUIList@@QAE_NI@Z:PROC			; TUIList::Add
EXTRN	??ATUIList@@QAEAAII@Z:PROC			; TUIList::operator[]
EXTRN	??6@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z:PROC	; operator<<
EXTRN	??5@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z:PROC	; operator>>
EXTRN	?PostSysMessage@CSystemObject@@IAEXEEGI@Z:PROC	; CSystemObject::PostSysMessage
EXTRN	??_ECRMO@@UAEPAXI@Z:PROC			; CRMO::`vector deleting destructor'
EXTRN	??_ECRMOList@@UAEPAXI@Z:PROC			; CRMOList::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CSystemObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSystemObject@@8 DD FLAT:??_R0?AVCSystemObject@@@8 ; CSystemObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CSystemObject@@8
rdata$r	SEGMENT
??_R2CSystemObject@@8 DD FLAT:??_R1A@?0A@EA@CSystemObject@@8 ; CSystemObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSystemObject@@8
rdata$r	SEGMENT
??_R3CSystemObject@@8 DD 00H				; CSystemObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSystemObject@@@8
data$r	SEGMENT
??_R0?AVCSystemObject@@@8 DD FLAT:??_7type_info@@6B@	; CSystemObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSystemObject@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EN@CSystemObject@@8
rdata$r	SEGMENT
??_R13?0A@EN@CSystemObject@@8 DD FLAT:??_R0?AVCSystemObject@@@8 ; CSystemObject::`RTTI Base Class Descriptor at (4,-1,0,77)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRMOList@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRMOList@@8 DD FLAT:??_R0?AVCRMOList@@@8	; CRMOList::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRMOList@@8
rdata$r	ENDS
;	COMDAT ??_R2CRMOList@@8
rdata$r	SEGMENT
??_R2CRMOList@@8 DD FLAT:??_R1A@?0A@EA@CRMOList@@8	; CRMOList::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@CSystemObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CRMOList@@8
rdata$r	SEGMENT
??_R3CRMOList@@8 DD 00H					; CRMOList::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CRMOList@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRMOList@@@8
data$r	SEGMENT
??_R0?AVCRMOList@@@8 DD FLAT:??_7type_info@@6B@		; CRMOList `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRMOList@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRMOList@@6B@
rdata$r	SEGMENT
??_R4CRMOList@@6B@ DD 00H				; CRMOList::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRMOList@@@8
	DD	FLAT:??_R3CRMOList@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRMOStoredData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRMOStoredData@@8 DD FLAT:??_R0?AVCRMOStoredData@@@8 ; CRMOStoredData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRMOStoredData@@8
rdata$r	ENDS
;	COMDAT ??_R2CRMOStoredData@@8
rdata$r	SEGMENT
??_R2CRMOStoredData@@8 DD FLAT:??_R1A@?0A@EA@CRMOStoredData@@8 ; CRMOStoredData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRMOStoredData@@8
rdata$r	SEGMENT
??_R3CRMOStoredData@@8 DD 00H				; CRMOStoredData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRMOStoredData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRMOStoredData@@@8
data$r	SEGMENT
??_R0?AVCRMOStoredData@@@8 DD FLAT:??_7type_info@@6B@	; CRMOStoredData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRMOStoredData@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EN@CRMOStoredData@@8
rdata$r	SEGMENT
??_R13?0A@EN@CRMOStoredData@@8 DD FLAT:??_R0?AVCRMOStoredData@@@8 ; CRMOStoredData::`RTTI Base Class Descriptor at (4,-1,0,77)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3CRMOStoredData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRMO@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRMO@@8 DD FLAT:??_R0?AVCRMO@@@8		; CRMO::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRMO@@8
rdata$r	ENDS
;	COMDAT ??_R2CRMO@@8
rdata$r	SEGMENT
??_R2CRMO@@8 DD	FLAT:??_R1A@?0A@EA@CRMO@@8		; CRMO::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EN@CRMOStoredData@@8
rdata$r	ENDS
;	COMDAT ??_R3CRMO@@8
rdata$r	SEGMENT
??_R3CRMO@@8 DD	00H					; CRMO::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CRMO@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRMO@@@8
data$r	SEGMENT
??_R0?AVCRMO@@@8 DD FLAT:??_7type_info@@6B@		; CRMO `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRMO@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRMO@@6B@
rdata$r	SEGMENT
??_R4CRMO@@6B@ DD 00H					; CRMO::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRMO@@@8
	DD	FLAT:??_R3CRMO@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	SEGMENT
__CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81 DD 00H
	DD	FLAT:??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8
data$r	SEGMENT
??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@8 DD FLAT:??_7type_info@@6B@ ; TFixedSizeBinaryData<4096>::EObjectTooLong `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@ DD 02H
	DD	FLAT:__CT??_R0?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@@81
	DD	FLAT:__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	ENDS
;	COMDAT __TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	SEGMENT
__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81 DD 00H
	DD	FLAT:??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8
data$r	SEGMENT
??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@8 DD FLAT:??_7type_info@@6B@ ; TFixedSizeBinaryData<4096>::EFSBDException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	SEGMENT
__CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81 DD 00H
	DD	FLAT:??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8
data$r	SEGMENT
??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@8 DD FLAT:??_7type_info@@6B@ ; TFixedSizeBinaryData<4096>::ENoDataForRead `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@ DD 02H
	DD	FLAT:__CT??_R0?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@@81
	DD	FLAT:__CT??_R0?AVEFSBDException@?$TFixedSizeBinaryData@$0BAAA@@@@81
xdata$x	ENDS
;	COMDAT __TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	SEGMENT
__TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
xdata$x	ENDS
;	COMDAT ??_C@_03IHLFIOLK@MPL?$AA@
CONST	SEGMENT
??_C@_03IHLFIOLK@MPL?$AA@ DB 'MPL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CRMOList@@6B@
CONST	SEGMENT
??_7CRMOList@@6B@ DD FLAT:??_R4CRMOList@@6B@		; CRMOList::`vftable'
	DD	FLAT:??_ECRMOList@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRMO@@6B@
CONST	SEGMENT
??_7CRMO@@6B@ DD FLAT:??_R4CRMO@@6B@			; CRMO::`vftable'
	DD	FLAT:??_ECRMO@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$TPtrList@VCRMO@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ$1
__ehfuncinfo$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z$0
__ehfuncinfo$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z$0
__ehfuncinfo$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Reset@CRMOStoredData@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Reset@CRMOStoredData@@QAEXXZ$0
__ehfuncinfo$?Reset@CRMOStoredData@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Reset@CRMOStoredData@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRMOStoredData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRMOStoredData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CRMOStoredData@@QAE@XZ$1
__ehfuncinfo$??0CRMOStoredData@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CRMOStoredData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tzssstring.h
;	COMDAT ??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z
_TEXT	SEGMENT
_size$ = -5						; size = 1
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z PROC ; operator>><4096>, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 77   : unsigned __int8 size;
; 78   : 	s.ReadDataTo((void *)&size, sizeof(size));

	push	1
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 79   : 	Value.set_length(size);

	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?set_length@TZSuperShortString@@QAEEE@Z	; TZSuperShortString::set_length

; 80   : 	s.ReadDataTo((void *)Value.c_str(), size);

	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?c_str@TZSuperShortString@@QBEPBDXZ	; TZSuperShortString::c_str
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 81   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 82   : };

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@operator
$LN3@operator:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ENDP ; operator>><4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z
_TEXT	SEGMENT
_size$ = -8						; size = 4
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z PROC ; operator>><4096>, COMDAT

; 65   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 66   : 	Value.Reset();

	mov	ecx, DWORD PTR _Value$[ebp]
	call	?Reset@TUIList@@QAEXXZ			; TUIList::Reset

; 67   : unsigned __int32 size;
; 68   : 	s.ReadDataTo((void *)&size, sizeof(unsigned int));

	push	4
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 69   : 	Value.SetSize(size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?SetSize@TUIList@@QAE_NI@Z		; TUIList::SetSize

; 70   : 	s.ReadDataTo((void *)Value.List, Value.size*sizeof(unsigned __int32));

	mov	eax, DWORD PTR _Value$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _Value$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::ReadDataTo

; 71   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 72   : };

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@operator
$LN3@operator:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ENDP ; operator>><4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tzssstring.h
;	COMDAT ??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z
_TEXT	SEGMENT
_size$ = -5						; size = 1
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z PROC ; operator<<<4096>, COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 67   : unsigned __int8 size;
; 68   : 	size = Value.length();

	mov	ecx, DWORD PTR _Value$[ebp]
	call	?length@TZSuperShortString@@QBEEXZ	; TZSuperShortString::length
	mov	BYTE PTR _size$[ebp], al

; 69   : 	s.WriteDataFrom((void *)&size, sizeof(size));

	push	1
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 70   : 	s.WriteDataFrom((void *)Value.c_str(), size);

	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Value$[ebp]
	call	?c_str@TZSuperShortString@@QBEPBDXZ	; TZSuperShortString::c_str
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 71   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 72   : };

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@operator
$LN3@operator:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ENDP ; operator<<<4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_Value$ = 12						; size = 4
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z PROC ; operator<<<4096>, COMDAT

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 58   : 	s.WriteDataFrom((void *)&Value.size, sizeof(Value.size));

	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 59   : 	s.WriteDataFrom((void *)Value.List, Value.size*sizeof(unsigned __int32));

	mov	eax, DWORD PTR _Value$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _Value$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ; TFixedSizeBinaryData<4096>::WriteDataFrom

; 60   : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ENDP ; operator<<<4096>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::ReadDataTo, COMDAT
; _this$ = ecx

; 83   : 	void ReadDataTo(void *ptr, unsigned __int32 sz) { __readto(ptr, sz); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReadDataTo@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::ReadDataTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::WriteDataFrom, COMDAT
; _this$ = ecx

; 82   : 	void WriteDataFrom(void *ptr, unsigned __int32 sz) { __writefrom(ptr, sz); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteDataFrom@?$TFixedSizeBinaryData@$0BAAA@@@QAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::WriteDataFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 70   : 	TFSBD_OPERATORRSH(unsigned int);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z PROC	; TFixedSizeBinaryData<4096>::operator>>, COMDAT
; _this$ = ecx

; 68   : 	TFSBD_OPERATORRSH(unsigned char);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__readto
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ENDP	; TFixedSizeBinaryData<4096>::operator>>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 54   : 	TFSBD_OPERATORLSH(const unsigned int);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z PROC	; TFixedSizeBinaryData<4096>::operator<<, COMDAT
; _this$ = ecx

; 52   : 	TFSBD_OPERATORLSH(const unsigned char);

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ; TFixedSizeBinaryData<4096>::__writefrom
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ENDP	; TFixedSizeBinaryData<4096>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::__readto, COMDAT
; _this$ = ecx

; 30   : 	inline void __readto(void * ptr, unsigned int sz) { if (curpos+sz>size) throw ENoDataForRead(); memcpy(ptr, &data[curpos], sz); curpos+=sz;};

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+4104]
	jbe	SHORT $LN2@readto
	push	OFFSET __TI2?AVENoDataForRead@?$TFixedSizeBinaryData@$0BAAA@@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@readto:
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4100]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4100], ecx
$LN3@readto:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?__readto@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::__readto
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tfixedsizebinarydata.hxx
;	COMDAT ?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
_sz$ = 12						; size = 4
?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z PROC ; TFixedSizeBinaryData<4096>::__writefrom, COMDAT
; _this$ = ecx

; 29   : 	inline void __writefrom(void * ptr, unsigned int sz) { if (curpos+sz>SEGSIZE) throw EObjectTooLong(); memcpy(&data[curpos], ptr, sz); curpos+=sz; size+=sz;};

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	cmp	ecx, 4096				; 00001000H
	jbe	SHORT $LN2@writefrom
	push	OFFSET __TI2?AVEObjectTooLong@?$TFixedSizeBinaryData@$0BAAA@@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@writefrom:
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4100]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4100]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4100], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4104]
	add	ecx, DWORD PTR _sz$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4104], ecx
$LN3@writefrom:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?__writefrom@?$TFixedSizeBinaryData@$0BAAA@@@AAEXPAXI@Z ENDP ; TFixedSizeBinaryData<4096>::__writefrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCRMOList@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCRMOList@@UAEPAXI@Z PROC				; CRMOList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRMOList@@UAE@XZ			; CRMOList::~CRMOList
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRMOList@@UAEPAXI@Z ENDP				; CRMOList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??1?$TPtrList@VCRMO@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$TPtrList@VCRMO@@@@QAE@XZ PROC			; TPtrList<CRMO>::~TPtrList<CRMO>, COMDAT
; _this$ = ecx

; 176  : 	~TPtrList() { Reset(); };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$TPtrList@VCRMO@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$TPtrList@VCRMO@@@@QAEXXZ	; TPtrList<CRMO>::Reset
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TUIList@@QAE@XZ			; TUIList::~TUIList
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$TPtrList@VCRMO@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$TPtrList@VCRMO@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$TPtrList@VCRMO@@@@QAE@XZ ENDP			; TPtrList<CRMO>::~TPtrList<CRMO>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??0?$TPtrList@VCRMO@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$TPtrList@VCRMO@@@@QAE@XZ PROC			; TPtrList<CRMO>::TPtrList<CRMO>, COMDAT
; _this$ = ecx

; 175  : 	TPtrList() { };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TUIList@@QAE@XZ			; TUIList::TUIList
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$TPtrList@VCRMO@@@@QAE@XZ ENDP			; TPtrList<CRMO>::TPtrList<CRMO>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z PROC		; TPtrList<CRMO>::operator[], COMDAT
; _this$ = ecx

; 173  : 	Type *operator[](unsigned __int32 index) { return (Type *)TUIList::operator [](index); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??ATUIList@@QAEAAII@Z			; TUIList::operator[]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z ENDP		; TPtrList<CRMO>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ?Reset@?$TPtrList@VCRMO@@@@QAEXXZ
_TEXT	SEGMENT
tv85 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_i$3 = -20						; size = 4
_this$ = -8						; size = 4
?Reset@?$TPtrList@VCRMO@@@@QAEXXZ PROC			; TPtrList<CRMO>::Reset, COMDAT
; _this$ = ecx

; 171  : 	void Reset(void) { for (unsigned i=0; i<TUIList::GetSize(); i++) delete (Type*)TUIList::operator [](i); TUIList::Reset(); };

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@Reset
$LN2@Reset:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@Reset:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSize@TUIList@@QBEIXZ		; TUIList::GetSize
	cmp	DWORD PTR _i$3[ebp], eax
	jae	SHORT $LN3@Reset
	mov	eax, DWORD PTR _i$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??ATUIList@@QAEAAII@Z			; TUIList::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Reset
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@Reset
$LN6@Reset:
	mov	DWORD PTR tv85[ebp], 0
$LN7@Reset:
	jmp	SHORT $LN2@Reset
$LN3@Reset:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@TUIList@@QAEXXZ			; TUIList::Reset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@?$TPtrList@VCRMO@@@@QAEXXZ ENDP			; TPtrList<CRMO>::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z PROC		; TPtrList<CRMO>::Add, COMDAT
; _this$ = ecx

; 168  : 	void Add(Type *data) { TUIList::Add((unsigned __int32)data); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@TUIList@@QAE_NI@Z			; TUIList::Add
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z ENDP		; TPtrList<CRMO>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tuilist.h
;	COMDAT ?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ PROC		; TPtrList<CRMO>::GetCount, COMDAT
; _this$ = ecx

; 166  : 	unsigned __int32 GetCount(void) { return TUIList::GetSize(); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSize@TUIList@@QBEIXZ		; TUIList::GetSize
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ ENDP		; TPtrList<CRMO>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ
_TEXT	SEGMENT
tv75 = -272						; size = 4
$T2 = -264						; size = 8
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_RMO$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ PROC	; CRMOList::CreateDefaultStartUpProfile, COMDAT
; _this$ = ecx

; 195  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 196  : CRMO *RMO = new CRMO;

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@CreateDefa
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CRMO@@QAE@XZ				; CRMO::CRMO
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@CreateDefa
$LN3@CreateDefa:
	mov	DWORD PTR tv75[ebp], 0
$LN4@CreateDefa:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _RMO$[ebp], ecx

; 197  : 	RMO->ComputerName = "MPL";

	push	OFFSET ??_C@_03IHLFIOLK@MPL?$AA@
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0TZSuperShortString@@QAE@PBD@Z	; TZSuperShortString::TZSuperShortString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _RMO$[ebp]
	add	ecx, 8
	call	??4TZSuperShortString@@QAEXABV0@@Z	; TZSuperShortString::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString

; 198  : 	RMO->Attr = RMOA_ADMINISTRATOR|RMOA_CANCHNGUSERPF;

	mov	eax, DWORD PTR _RMO$[ebp]
	mov	DWORD PTR [eax+16], 1179648		; 00120000H

; 199  : 	RMO->RMOUID = 1;

	mov	eax, DWORD PTR _RMO$[ebp]
	mov	DWORD PTR [eax+4], 1

; 200  : 	RMOList.Add(RMO);

	mov	eax, DWORD PTR _RMO$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z ; TPtrList<CRMO>::Add

; 201  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ$0:
	push	36					; 00000024H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
__ehhandler$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateDefaultStartUpProfile@CRMOList@@AAEXXZ ENDP	; CRMOList::CreateDefaultStartUpProfile
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?GetUserAttr@CRMOList@@AAEII@Z
_TEXT	SEGMENT
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_RUID$ = 8						; size = 4
?GetUserAttr@CRMOList@@AAEII@Z PROC			; CRMOList::GetUserAttr, COMDAT
; _this$ = ecx

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	for (unsigned pos=0; pos<RMOList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@GetUserAtt
$LN2@GetUserAtt:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@GetUserAtt:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	SHORT $LN3@GetUserAtt

; 187  : 		if (RMOList[pos]->RMOUID==RUID)

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _RUID$[ebp]
	jne	SHORT $LN5@GetUserAtt

; 188  : 		{
; 189  : 			return RMOList[pos]->Attr;

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	eax, DWORD PTR [eax+16]
	jmp	SHORT $LN1@GetUserAtt
$LN5@GetUserAtt:

; 190  : 		};

	jmp	SHORT $LN2@GetUserAtt
$LN3@GetUserAtt:

; 191  : 	return 0;

	xor	eax, eax
$LN1@GetUserAtt:

; 192  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUserAttr@CRMOList@@AAEII@Z ENDP			; CRMOList::GetUserAttr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?GetRMODataByNameAndType@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@I@Z
_TEXT	SEGMENT
tv133 = -224						; size = 4
tv134 = -220						; size = 4
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_Type$ = 12						; size = 4
?GetRMODataByNameAndType@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@I@Z PROC ; CRMOList::GetRMODataByNameAndType, COMDAT
; _this$ = ecx

; 175  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  : 	for (unsigned pos=0; pos<RMOList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@GetRMOData
$LN2@GetRMOData:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@GetRMOData:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	$LN3@GetRMOData

; 177  : 		if (RMOList[pos]->ComputerName==str && ((RMOList[pos]->Attr&RMOA_CATEGORYMASK)==Type))

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	add	eax, 8
	push	eax
	call	??8@YAHABVTZSuperShortString@@0@Z	; operator==
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@GetRMOData
	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, DWORD PTR [eax+16]
	and	ecx, 196608				; 00030000H
	cmp	ecx, DWORD PTR _Type$[ebp]
	jne	SHORT $LN5@GetRMOData

; 178  : 		{
; 179  : 			return dynamic_cast<CRMOStoredData*>(RMOList[pos]);

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	DWORD PTR tv134[ebp], eax
	cmp	DWORD PTR tv134[ebp], 0
	je	SHORT $LN7@GetRMOData
	mov	ecx, DWORD PTR tv134[ebp]
	add	ecx, 4
	mov	DWORD PTR tv133[ebp], ecx
	jmp	SHORT $LN8@GetRMOData
$LN7@GetRMOData:
	mov	DWORD PTR tv133[ebp], 0
$LN8@GetRMOData:
	mov	eax, DWORD PTR tv133[ebp]
	jmp	SHORT $LN1@GetRMOData
$LN5@GetRMOData:

; 180  : 		};

	jmp	$LN2@GetRMOData
$LN3@GetRMOData:

; 181  : 	return NULL;

	xor	eax, eax
$LN1@GetRMOData:

; 182  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetRMODataByNameAndType@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@I@Z ENDP ; CRMOList::GetRMODataByNameAndType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?GetRMODataByName@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@@Z
_TEXT	SEGMENT
tv90 = -224						; size = 4
tv91 = -220						; size = 4
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?GetRMODataByName@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@@Z PROC ; CRMOList::GetRMODataByName, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 	for (unsigned pos=0; pos<RMOList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@GetRMOData
$LN2@GetRMOData:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@GetRMOData:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	SHORT $LN3@GetRMOData

; 167  : 		if (RMOList[pos]->ComputerName==str)

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	add	eax, 8
	push	eax
	call	??8@YAHABVTZSuperShortString@@0@Z	; operator==
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@GetRMOData

; 168  : 		{
; 169  : 			return dynamic_cast<CRMOStoredData*>(RMOList[pos]);

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	DWORD PTR tv91[ebp], eax
	cmp	DWORD PTR tv91[ebp], 0
	je	SHORT $LN7@GetRMOData
	mov	ecx, DWORD PTR tv91[ebp]
	add	ecx, 4
	mov	DWORD PTR tv90[ebp], ecx
	jmp	SHORT $LN8@GetRMOData
$LN7@GetRMOData:
	mov	DWORD PTR tv90[ebp], 0
$LN8@GetRMOData:
	mov	eax, DWORD PTR tv90[ebp]
	jmp	SHORT $LN1@GetRMOData
$LN5@GetRMOData:

; 170  : 		};

	jmp	SHORT $LN2@GetRMOData
$LN3@GetRMOData:

; 171  : 	return NULL;

	xor	eax, eax
$LN1@GetRMOData:

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRMODataByName@CRMOList@@AAEPAVCRMOStoredData@@AAVTZSuperShortString@@@Z ENDP ; CRMOList::GetRMODataByName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?GetRMODataByUID@CRMOList@@AAEPAVCRMOStoredData@@I@Z
_TEXT	SEGMENT
tv87 = -224						; size = 4
tv88 = -220						; size = 4
_pos$1 = -20						; size = 4
_this$ = -8						; size = 4
_RMOUID$ = 8						; size = 4
?GetRMODataByUID@CRMOList@@AAEPAVCRMOStoredData@@I@Z PROC ; CRMOList::GetRMODataByUID, COMDAT
; _this$ = ecx

; 155  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  : 	for (unsigned pos=0; pos<RMOList.GetCount(); pos++)

	mov	DWORD PTR _pos$1[ebp], 0
	jmp	SHORT $LN4@GetRMOData
$LN2@GetRMOData:
	mov	eax, DWORD PTR _pos$1[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$1[ebp], eax
$LN4@GetRMOData:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _pos$1[ebp], eax
	jae	SHORT $LN3@GetRMOData

; 157  : 		if (RMOList[pos]->RMOUID==RMOUID)

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _RMOUID$[ebp]
	jne	SHORT $LN5@GetRMOData

; 158  : 		{
; 159  : 			return dynamic_cast<CRMOStoredData*>(RMOList[pos]);

	mov	eax, DWORD PTR _pos$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	DWORD PTR tv88[ebp], eax
	cmp	DWORD PTR tv88[ebp], 0
	je	SHORT $LN7@GetRMOData
	mov	ecx, DWORD PTR tv88[ebp]
	add	ecx, 4
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN8@GetRMOData
$LN7@GetRMOData:
	mov	DWORD PTR tv87[ebp], 0
$LN8@GetRMOData:
	mov	eax, DWORD PTR tv87[ebp]
	jmp	SHORT $LN1@GetRMOData
$LN5@GetRMOData:

; 160  : 		};

	jmp	SHORT $LN2@GetRMOData
$LN3@GetRMOData:

; 161  : 	return NULL;

	xor	eax, eax
$LN1@GetRMOData:

; 162  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRMODataByUID@CRMOList@@AAEPAVCRMOStoredData@@I@Z ENDP ; CRMOList::GetRMODataByUID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
tv165 = -304						; size = 4
$T2 = -296						; size = 4
$T3 = -284						; size = 4
_RMO$ = -80						; size = 4
_i$4 = -68						; size = 4
_NUIDMustBeChange$ = -53				; size = 1
_NUID$ = -44						; size = 4
_pos$5 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_RMOUID$ = 8						; size = 4
_TND$ = 12						; size = 4
?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CRMOList::LoadFrom, COMDAT
; _this$ = ecx

; 118  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 119  : 	if (RMOUID!=0xFFFFFFFF)

	cmp	DWORD PTR _RMOUID$[ebp], -1
	je	$LN11@LoadFrom

; 120  : 	{
; 121  : 	unsigned pos;
; 122  : 		for (pos=0; pos<RMOList.GetCount(); pos++)

	mov	DWORD PTR _pos$5[ebp], 0
	jmp	SHORT $LN4@LoadFrom
$LN2@LoadFrom:
	mov	eax, DWORD PTR _pos$5[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$5[ebp], eax
$LN4@LoadFrom:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _pos$5[ebp], eax
	jae	SHORT $LN3@LoadFrom

; 123  : 			if (RMOList[pos]->RMOUID==RMOUID) break;

	mov	eax, DWORD PTR _pos$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _RMOUID$[ebp]
	jne	SHORT $LN12@LoadFrom
	jmp	SHORT $LN3@LoadFrom
$LN12@LoadFrom:

; 124  : 		RMOList[pos]->LoadFrom(TND);

	jmp	SHORT $LN2@LoadFrom
$LN3@LoadFrom:
	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, eax
	call	?LoadFrom@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMO::LoadFrom

; 125  : 		PostSysMessage(SCMD_SAVEPROFILE);

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 126  : 		PostSysMessage(SCMD_RELOADRMOPROFILE, 0, 0, RMOUID);

	mov	eax, DWORD PTR _RMOUID$[ebp]
	push	eax
	push	0
	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 127  : 		return true;

	mov	al, 1
	jmp	$LN1@LoadFrom
$LN11@LoadFrom:

; 128  : 	};
; 129  : 
; 130  : unsigned __int32 NUID = 10;

	mov	DWORD PTR _NUID$[ebp], 10		; 0000000aH

; 131  : bool NUIDMustBeChange=false;

	mov	BYTE PTR _NUIDMustBeChange$[ebp], 0
$LN7@LoadFrom:

; 132  : 	for (;;)
; 133  : 	{
; 134  : 		for (unsigned i=0; i<RMOList.GetCount(); i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN10@LoadFrom
$LN8@LoadFrom:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN10@LoadFrom:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _i$4[ebp], eax
	jae	SHORT $LN9@LoadFrom

; 135  : 			if (RMOList[i]->RMOUID==NUID) 

	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _NUID$[ebp]
	jne	SHORT $LN13@LoadFrom

; 136  : 			{
; 137  : 				NUIDMustBeChange = true;

	mov	BYTE PTR _NUIDMustBeChange$[ebp], 1

; 138  : 				break;

	jmp	SHORT $LN9@LoadFrom
$LN13@LoadFrom:

; 139  : 			};

	jmp	SHORT $LN8@LoadFrom
$LN9@LoadFrom:

; 140  : 		if (NUIDMustBeChange==false) break;

	movzx	eax, BYTE PTR _NUIDMustBeChange$[ebp]
	test	eax, eax
	jne	SHORT $LN14@LoadFrom
	jmp	SHORT $LN6@LoadFrom
$LN14@LoadFrom:

; 141  : 		NUID++;

	mov	eax, DWORD PTR _NUID$[ebp]
	add	eax, 1
	mov	DWORD PTR _NUID$[ebp], eax

; 142  : 		NUIDMustBeChange = false;

	mov	BYTE PTR _NUIDMustBeChange$[ebp], 0

; 143  : 	};

	jmp	SHORT $LN7@LoadFrom
$LN6@LoadFrom:

; 144  : 
; 145  : CRMO *RMO = new CRMO;

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN16@LoadFrom
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CRMO@@QAE@XZ				; CRMO::CRMO
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $LN17@LoadFrom
$LN16@LoadFrom:
	mov	DWORD PTR tv165[ebp], 0
$LN17@LoadFrom:
	mov	eax, DWORD PTR tv165[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _RMO$[ebp], ecx

; 146  : 	RMO->LoadFrom(TND);

	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RMO$[ebp]
	call	?LoadFrom@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMO::LoadFrom

; 147  : 	RMO->RMOUID = NUID;

	mov	eax, DWORD PTR _RMO$[ebp]
	mov	ecx, DWORD PTR _NUID$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 148  : 	RMOList.Add(RMO);

	mov	eax, DWORD PTR _RMO$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z ; TPtrList<CRMO>::Add

; 149  : 	PostSysMessage(SCMD_SAVEPROFILE);

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 150  : 	PostSysMessage(SCMD_RELOADRMOPROFILE, 0, 0, RMOUID);

	mov	eax, DWORD PTR _RMOUID$[ebp]
	push	eax
	push	0
	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?PostSysMessage@CSystemObject@@IAEXEEGI@Z ; CSystemObject::PostSysMessage

; 151  : 	return true;

	mov	al, 1
$LN1@LoadFrom:

; 152  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z$0:
	push	36					; 00000024H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadFrom@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CRMOList::LoadFrom
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?SaveTo@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
_RMOUID$ = 8						; size = 4
_TND$ = 12						; size = 4
?SaveTo@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CRMOList::SaveTo, COMDAT
; _this$ = ecx

; 106  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 107  : unsigned pos;
; 108  : 	for (pos=0; pos<RMOList.GetCount(); pos++)

	mov	DWORD PTR _pos$[ebp], 0
	jmp	SHORT $LN4@SaveTo
$LN2@SaveTo:
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN4@SaveTo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _pos$[ebp], eax
	jae	SHORT $LN3@SaveTo

; 109  : 		if (RMOList[pos]->RMOUID==RMOUID)

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _RMOUID$[ebp]
	jne	SHORT $LN5@SaveTo

; 110  : 		{
; 111  : 			RMOList[pos]->SaveTo(TND);

	mov	eax, DWORD PTR _TND$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, eax
	call	?SaveTo@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ; CRMO::SaveTo

; 112  : 			return true;

	mov	al, 1
	jmp	SHORT $LN1@SaveTo
$LN5@SaveTo:

; 113  : 		};

	jmp	SHORT $LN2@SaveTo
$LN3@SaveTo:

; 114  : 	return false;

	xor	al, al
$LN1@SaveTo:

; 115  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveTo@CRMOList@@AAE_NIPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CRMOList::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?SaveRMUIDListTo@CRMOList@@AAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_i$2 = -20						; size = 4
_this$ = -8						; size = 4
_TND$ = 8						; size = 4
?SaveRMUIDListTo@CRMOList@@AAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CRMOList::SaveRMUIDListTo, COMDAT
; _this$ = ecx

; 99   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 	(*TND) << RMOList.GetCount();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<

; 101  : 	for (unsigned i=0; i<RMOList.GetCount(); i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@SaveRMUIDL
$LN2@SaveRMUIDL:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@SaveRMUIDL:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _i$2[ebp], eax
	jae	SHORT $LN1@SaveRMUIDL

; 102  : 		(*TND) << RMOList[i]->RMOUID << RMOList[i]->ComputerName << RMOList[i]->Attr;

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _i$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	add	eax, 8
	push	eax
	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
	add	esp, 8
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	jmp	SHORT $LN2@SaveRMUIDL
$LN1@SaveRMUIDL:

; 103  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveRMUIDListTo@CRMOList@@AAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CRMOList::SaveRMUIDListTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
tv81 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
_i$4 = -56						; size = 4
_RMO$ = -44						; size = 4
_Size$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_TBD$ = 8						; size = 4
?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z PROC		; CRMOList::LoadFrom, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	RMOList.Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Reset@?$TPtrList@VCRMO@@@@QAEXXZ	; TPtrList<CRMO>::Reset

; 87   : unsigned __int32 Size;
; 88   : CRMO *RMO;
; 89   : 	(*TBD) >> Size;

	lea	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>

; 90   : 	for (unsigned i=0; i<Size; i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@LoadFrom
$LN2@LoadFrom:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@LoadFrom:
	mov	eax, DWORD PTR _i$4[ebp]
	cmp	eax, DWORD PTR _Size$[ebp]
	jae	SHORT $LN1@LoadFrom

; 91   : 	{
; 92   : 		RMO = new CRMO;

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@LoadFrom
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CRMO@@QAE@XZ				; CRMO::CRMO
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@LoadFrom
$LN6@LoadFrom:
	mov	DWORD PTR tv81[ebp], 0
$LN7@LoadFrom:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _RMO$[ebp], ecx

; 93   : 		RMO->LoadFrom(TBD);

	mov	eax, DWORD PTR _TBD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RMO$[ebp]
	call	?LoadFrom@CRMO@@QAEXPAVTBinaryData@@@Z	; CRMO::LoadFrom

; 94   : 		RMOList.Add(RMO);

	mov	eax, DWORD PTR _RMO$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Add@?$TPtrList@VCRMO@@@@QAEXPAVCRMO@@@Z ; TPtrList<CRMO>::Add

; 95   : 	};

	jmp	$LN2@LoadFrom
$LN1@LoadFrom:

; 96   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@LoadFrom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@LoadFrom:
	DD	1
	DD	$LN11@LoadFrom
$LN11@LoadFrom:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@LoadFrom
$LN9@LoadFrom:
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z$0:
	push	36					; 00000024H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadFrom@CRMOList@@AAEXPAVTBinaryData@@@Z ENDP		; CRMOList::LoadFrom
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?SaveTo@CRMOList@@AAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_i$2 = -20						; size = 4
_this$ = -8						; size = 4
_TBD$ = 8						; size = 4
?SaveTo@CRMOList@@AAEXPAVTBinaryData@@@Z PROC		; CRMOList::SaveTo, COMDAT
; _this$ = ecx

; 76   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 	(*TBD) << RMOList.GetCount();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<

; 78   : 	for (unsigned i=0; i<RMOList.GetCount(); i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@SaveTo
$LN2@SaveTo:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@SaveTo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetCount@?$TPtrList@VCRMO@@@@QAEIXZ	; TPtrList<CRMO>::GetCount
	cmp	DWORD PTR _i$2[ebp], eax
	jae	SHORT $LN1@SaveTo

; 79   : 	{
; 80   : 		RMOList[i]->SaveTo(TBD);

	mov	eax, DWORD PTR _TBD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$TPtrList@VCRMO@@@@QAEPAVCRMO@@I@Z	; TPtrList<CRMO>::operator[]
	mov	ecx, eax
	call	?SaveTo@CRMO@@QAEXPAVTBinaryData@@@Z	; CRMO::SaveTo

; 81   : 	};

	jmp	SHORT $LN2@SaveTo
$LN1@SaveTo:

; 82   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveTo@CRMOList@@AAEXPAVTBinaryData@@@Z ENDP		; CRMOList::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ??1CRMOList@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRMOList@@UAE@XZ PROC				; CRMOList::~CRMOList, COMDAT
; _this$ = ecx

; 72   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRMOList@@6B@

; 73   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$TPtrList@VCRMO@@@@QAE@XZ		; TPtrList<CRMO>::~TPtrList<CRMO>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRMOList@@UAE@XZ ENDP				; CRMOList::~CRMOList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ??0CRMOList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CRMOList@@QAE@XZ PROC				; CRMOList::CRMOList, COMDAT
; _this$ = ecx

; 68   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRMOList@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$TPtrList@VCRMO@@@@QAE@XZ		; TPtrList<CRMO>::TPtrList<CRMO>

; 69   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRMOList@@QAE@XZ ENDP				; CRMOList::CRMOList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCRMO@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCRMO@@UAEPAXI@Z PROC				; CRMO::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRMO@@UAE@XZ				; CRMO::~CRMO
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRMO@@UAEPAXI@Z ENDP				; CRMO::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?LoadFrom@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TND$ = 8						; size = 4
?LoadFrom@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CRMO::LoadFrom, COMDAT
; _this$ = ecx

; 62   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 	(*TND) >> RMOUID >> ComputerName >> Attr >> ServiceGroupsList >> RMLineNumber;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ; TFixedSizeBinaryData<4096>::operator>>
	push	eax
	call	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator>><4096>
	add	esp, 8
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAI@Z ; TFixedSizeBinaryData<4096>::operator>>
	push	eax
	call	??$?5$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator>><4096>
	add	esp, 8
	mov	ecx, eax
	call	??5?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@AAE@Z ; TFixedSizeBinaryData<4096>::operator>>

; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadFrom@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CRMO::LoadFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?SaveTo@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TND$ = 8						; size = 4
?SaveTo@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z PROC ; CRMO::SaveTo, COMDAT
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 	(*TND) << RMOUID << ComputerName << Attr << ServiceGroupsList << RMLineNumber;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _TND$[ebp]
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTZSuperShortString@@@Z ; operator<<<4096>
	add	esp, 8
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABI@Z ; TFixedSizeBinaryData<4096>::operator<<
	push	eax
	call	??$?6$0BAAA@@@YAAAV?$TFixedSizeBinaryData@$0BAAA@@@AAV0@AAVTUIList@@@Z ; operator<<<4096>
	add	esp, 8
	mov	ecx, eax
	call	??6?$TFixedSizeBinaryData@$0BAAA@@@QAEAAV0@ABE@Z ; TFixedSizeBinaryData<4096>::operator<<

; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveTo@CRMO@@QAEXPAV?$TFixedSizeBinaryData@$0BAAA@@@@Z ENDP ; CRMO::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?LoadFrom@CRMO@@QAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TBD$ = 8						; size = 4
?LoadFrom@CRMO@@QAEXPAVTBinaryData@@@Z PROC		; CRMO::LoadFrom, COMDAT
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   : 	(*TBD) >> RMOUID >> ComputerName >> Attr >> ServiceGroupsList >> RMLineNumber;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>
	push	eax
	call	??5@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z ; operator>>
	add	esp, 8
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAI@Z		; TBinaryData::operator>>
	push	eax
	call	??5@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z ; operator>>
	add	esp, 8
	mov	ecx, eax
	call	??5TBinaryData@@QAEAAV0@AAE@Z		; TBinaryData::operator>>

; 54   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadFrom@CRMO@@QAEXPAVTBinaryData@@@Z ENDP		; CRMO::LoadFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?SaveTo@CRMO@@QAEXPAVTBinaryData@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TBD$ = 8						; size = 4
?SaveTo@CRMO@@QAEXPAVTBinaryData@@@Z PROC		; CRMO::SaveTo, COMDAT
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 	(*TBD) << RMOUID << ComputerName << Attr << ServiceGroupsList << RMLineNumber;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _TBD$[ebp]
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<
	push	eax
	call	??6@YAAAVTBinaryData@@AAV0@AAVTZSuperShortString@@@Z ; operator<<
	add	esp, 8
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABI@Z		; TBinaryData::operator<<
	push	eax
	call	??6@YAAAVTBinaryData@@AAV0@AAVTUIList@@@Z ; operator<<
	add	esp, 8
	mov	ecx, eax
	call	??6TBinaryData@@QAEAAV0@ABE@Z		; TBinaryData::operator<<

; 49   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveTo@CRMO@@QAEXPAVTBinaryData@@@Z ENDP		; CRMO::SaveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ??1CRMO@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRMO@@UAE@XZ PROC					; CRMO::~CRMO, COMDAT
; _this$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRMO@@6B@

; 43   : 
; 44   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CRMOStoredData@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRMO@@UAE@XZ ENDP					; CRMO::~CRMO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ??0CRMO@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CRMO@@QAE@XZ PROC					; CRMO::CRMO, COMDAT
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CRMOStoredData@@QAE@XZ		; CRMOStoredData::CRMOStoredData
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRMO@@6B@

; 39   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRMO@@QAE@XZ ENDP					; CRMO::CRMO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CRMOStoredData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CRMOStoredData@@QAE@XZ PROC				; CRMOStoredData::~CRMOStoredData, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1TUIList@@QAE@XZ			; TUIList::~TUIList
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRMOStoredData@@QAE@XZ ENDP				; CRMOStoredData::~CRMOStoredData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?CopyFrom@CRMOStoredData@@QAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_CRMOSD$ = 8						; size = 4
?CopyFrom@CRMOStoredData@@QAEXPAV1@@Z PROC		; CRMOStoredData::CopyFrom, COMDAT
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 29   : 	RMOUID=CRMOSD->RMOUID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CRMOSD$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 30   : 	ComputerName=CRMOSD->ComputerName;

	mov	eax, DWORD PTR _CRMOSD$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4TZSuperShortString@@QAEXABV0@@Z	; TZSuperShortString::operator=

; 31   : 	Attr=CRMOSD->Attr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CRMOSD$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx

; 32   : 	ServiceGroupsList=CRMOSD->ServiceGroupsList;

	mov	eax, DWORD PTR _CRMOSD$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4TUIList@@QAEXABV0@@Z			; TUIList::operator=

; 33   : 	RMLineNumber=CRMOSD->RMLineNumber;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CRMOSD$[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR [eax+28], dl

; 34   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyFrom@CRMOStoredData@@QAEXPAV1@@Z ENDP		; CRMOStoredData::CopyFrom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?Reset@CRMOStoredData@@QAEXXZ
_TEXT	SEGMENT
$T2 = -228						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Reset@CRMOStoredData@@QAEXXZ PROC			; CRMOStoredData::Reset, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Reset@CRMOStoredData@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 	RMOUID=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 21   : 	ComputerName="";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0TZSuperShortString@@QAE@PBD@Z	; TZSuperShortString::TZSuperShortString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4TZSuperShortString@@QAEXABV0@@Z	; TZSuperShortString::operator=
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString

; 22   : 	Attr=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 23   : //	ServiceGroupsList.Reset();
; 24   : 	RMLineNumber=-1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 255			; 000000ffH

; 25   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Reset@CRMOStoredData@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
__ehhandler$?Reset@CRMOStoredData@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Reset@CRMOStoredData@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Reset@CRMOStoredData@@QAEXXZ ENDP			; CRMOStoredData::Reset
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ??0CRMOStoredData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CRMOStoredData@@QAE@XZ PROC				; CRMOStoredData::CRMOStoredData, COMDAT
; _this$ = ecx

; 14   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRMOStoredData@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0TZSuperShortString@@QAE@XZ		; TZSuperShortString::TZSuperShortString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0TUIList@@QAE@XZ			; TUIList::TUIList
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 15   : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CRMOStoredData@@QAEXXZ		; CRMOStoredData::Reset

; 16   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRMOStoredData@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1TZSuperShortString@@QAE@XZ		; TZSuperShortString::~TZSuperShortString
__unwindfunclet$??0CRMOStoredData@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1TUIList@@QAE@XZ			; TUIList::~TUIList
__ehhandler$??0CRMOStoredData@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CRMOStoredData@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CRMOStoredData@@QAE@XZ ENDP				; CRMOStoredData::CRMOStoredData
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\tzssstring.h
;	COMDAT ?c_str@TZSuperShortString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@TZSuperShortString@@QBEPBDXZ PROC		; TZSuperShortString::c_str, COMDAT
; _this$ = ecx

; 29   : 	inline const char *c_str(void) const { return str; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@TZSuperShortString@@QBEPBDXZ ENDP		; TZSuperShortString::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\rmoworkset.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
