; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26131.1 

	TITLE	C:\Users\smith\Projects\CallCenter\Thread.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
?THIS_FILE@@3PADA DB 'c:\users\smith\projects\callcenter\thread.cpp', 00H ; THIS_FILE
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?SetPriority@CThread@@QAE_NH@Z			; CThread::SetPriority
PUBLIC	?Resume@CThread@@QAEXXZ				; CThread::Resume
PUBLIC	?Suspend@CThread@@QAEXXZ			; CThread::Suspend
PUBLIC	?Terminate@CThread@@QAEXXZ			; CThread::Terminate
PUBLIC	?TerminateAndWait@CThread@@QAEKK@Z		; CThread::TerminateAndWait
PUBLIC	?Kill@CThread@@QAEXXZ				; CThread::Kill
PUBLIC	?GetThreadHandle@CThread@@QAEPAXXZ		; CThread::GetThreadHandle
PUBLIC	??0CThread@@QAE@_N@Z				; CThread::CThread
PUBLIC	??1CThread@@UAE@XZ				; CThread::~CThread
PUBLIC	?__Execute@CThread@@AAEXXZ			; CThread::__Execute
PUBLIC	?__CThread_InternalThreadProc@@YGKPAX@Z		; __CThread_InternalThreadProc
PUBLIC	??_GCThread@@UAEPAXI@Z				; CThread::`scalar deleting destructor'
PUBLIC	??_7CThread@@6B@				; CThread::`vftable'
PUBLIC	??_R4CThread@@6B@				; CThread::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCThread@@@8				; CThread `RTTI Type Descriptor'
PUBLIC	??_R3CThread@@8					; CThread::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CThread@@8					; CThread::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CThread@@8			; CThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__SetThreadPriority@8:PROC
EXTRN	__imp__TerminateThread@8:PROC
EXTRN	__imp__SuspendThread@4:PROC
EXTRN	__imp__ResumeThread@4:PROC
EXTRN	??_ECThread@@UAEPAXI@Z:PROC			; CThread::`vector deleting destructor'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CThread@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CThread@@8 DD FLAT:??_R0?AVCThread@@@8	; CThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CThread@@8
rdata$r	ENDS
;	COMDAT ??_R2CThread@@8
rdata$r	SEGMENT
??_R2CThread@@8 DD FLAT:??_R1A@?0A@EA@CThread@@8	; CThread::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CThread@@8
rdata$r	SEGMENT
??_R3CThread@@8 DD 00H					; CThread::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CThread@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCThread@@@8
data$r	SEGMENT
??_R0?AVCThread@@@8 DD FLAT:??_7type_info@@6B@		; CThread `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCThread@@', 00H
data$r	ENDS
;	COMDAT ??_R4CThread@@6B@
rdata$r	SEGMENT
??_R4CThread@@6B@ DD 00H				; CThread::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCThread@@@8
	DD	FLAT:??_R3CThread@@8
rdata$r	ENDS
;	COMDAT ??_7CThread@@6B@
CONST	SEGMENT
??_7CThread@@6B@ DD FLAT:??_R4CThread@@6B@		; CThread::`vftable'
	DD	FLAT:??_ECThread@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCThread@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCThread@@UAEPAXI@Z PROC				; CThread::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CThread@@UAE@XZ			; CThread::~CThread
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCThread@@UAEPAXI@Z ENDP				; CThread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?__CThread_InternalThreadProc@@YGKPAX@Z
_TEXT	SEGMENT
_Thread$ = 8						; size = 4
?__CThread_InternalThreadProc@@YGKPAX@Z PROC		; __CThread_InternalThreadProc, COMDAT

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 26   : //	cout << "EE1" << endl;
; 27   : 	((CThread *)Thread)->__Execute();

	mov	ecx, DWORD PTR _Thread$[ebp]
	call	?__Execute@CThread@@AAEXXZ		; CThread::__Execute

; 28   :  	return 0;

	xor	eax, eax

; 29   : };

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__CThread_InternalThreadProc@@YGKPAX@Z ENDP		; __CThread_InternalThreadProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?__Execute@CThread@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?__Execute@CThread@@AAEXXZ PROC				; CThread::__Execute, COMDAT
; _this$ = ecx

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 49   : //	cout << "EE2" << endl;
; 50   : //	try {
; 51   : 		Execute();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 52   : /*	} catch (...)
; 53   : 	{
; 54   : 		cout << "Exception ThreadID=" << GetCurrentThreadId() << endl;
; 55   : 		cout << "this=" << this << endl;
; 56   : 	};*/
; 57   : 	SetEvent(hTerminateEvent);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__SetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 58   : //	ExitThread(1);
; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__Execute@CThread@@AAEXXZ ENDP				; CThread::__Execute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ??1CThread@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CThread@@UAE@XZ PROC					; CThread::~CThread, COMDAT
; _this$ = ecx

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CThread@@6B@

; 44   : 
; 45   : } 

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CThread@@UAE@XZ ENDP					; CThread::~CThread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ??0CThread@@QAE@_N@Z
_TEXT	SEGMENT
tv78 = -208						; size = 4
_this$ = -8						; size = 4
_CreateSuspended$ = 8					; size = 1
??0CThread@@QAE@_N@Z PROC				; CThread::CThread, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CThread@@6B@

; 33   : 	Terminated = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 34   : 	hTerminateEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateEventA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax

; 35   : //	hThread = (HANDLE) _beginthreadex(NULL, 0, __CThread_InternalThreadProc,
; 36   : //		this, CreateSuspended?CREATE_SUSPENDED:0, (unsigned int *)&(this->ThreadID));
; 37   : 				
; 38   : 	hThread = CreateThread(NULL, 0, __CThread_InternalThreadProc, this,

	movzx	eax, BYTE PTR _CreateSuspended$[ebp]
	test	eax, eax
	je	SHORT $LN3@CThread
	mov	DWORD PTR tv78[ebp], 4
	jmp	SHORT $LN4@CThread
$LN3@CThread:
	mov	DWORD PTR tv78[ebp], 0
$LN4@CThread:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ?__CThread_InternalThreadProc@@YGKPAX@Z ; __CThread_InternalThreadProc
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 39   :             CreateSuspended?CREATE_SUSPENDED:0, &(this->ThreadID)); 
; 40   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CThread@@QAE@_N@Z ENDP				; CThread::CThread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?GetThreadHandle@CThread@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetThreadHandle@CThread@@QAEPAXXZ PROC			; CThread::GetThreadHandle, COMDAT
; _this$ = ecx

; 94   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 	return hThread;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 96   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetThreadHandle@CThread@@QAEPAXXZ ENDP			; CThread::GetThreadHandle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?Kill@CThread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Kill@CThread@@QAEXXZ PROC				; CThread::Kill, COMDAT
; _this$ = ecx

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 74   : 	if (WaitForSingleObject(hTerminateEvent, 0)!=WAIT_OBJECT_0)

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@Kill

; 75   : 		TerminateThread(hThread, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__TerminateThread@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Kill:

; 76   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Kill@CThread@@QAEXXZ ENDP				; CThread::Kill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?TerminateAndWait@CThread@@QAEKK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tout$ = 8						; size = 4
?TerminateAndWait@CThread@@QAEKK@Z PROC			; CThread::TerminateAndWait, COMDAT
; _this$ = ecx

; 67   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   : 	Terminated = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1

; 69   : 	return WaitForSingleObject(hTerminateEvent, tout);

	mov	esi, esp
	mov	eax, DWORD PTR _tout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?TerminateAndWait@CThread@@QAEKK@Z ENDP			; CThread::TerminateAndWait
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?Terminate@CThread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Terminate@CThread@@QAEXXZ PROC				; CThread::Terminate, COMDAT
; _this$ = ecx

; 62   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 	Terminated = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1

; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Terminate@CThread@@QAEXXZ ENDP				; CThread::Terminate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?Suspend@CThread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Suspend@CThread@@QAEXXZ PROC				; CThread::Suspend, COMDAT
; _this$ = ecx

; 89   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 	SuspendThread(hThread);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__SuspendThread@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 91   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Suspend@CThread@@QAEXXZ ENDP				; CThread::Suspend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?Resume@CThread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Resume@CThread@@QAEXXZ PROC				; CThread::Resume, COMDAT
; _this$ = ecx

; 84   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 	ResumeThread(hThread);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__ResumeThread@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 86   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Resume@CThread@@QAEXXZ ENDP				; CThread::Resume
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?SetPriority@CThread@@QAE_NH@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_tp$ = 8						; size = 4
?SetPriority@CThread@@QAE_NH@Z PROC			; CThread::SetPriority, COMDAT
; _this$ = ecx

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 	return (SetThreadPriority(hThread, tp)==1);

	mov	esi, esp
	mov	eax, DWORD PTR _tp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	DWORD PTR __imp__SetThreadPriority@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@SetPriorit
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@SetPriorit
$LN3@SetPriorit:
	mov	DWORD PTR tv69[ebp], 0
$LN4@SetPriorit:
	mov	al, BYTE PTR tv69[ebp]

; 81   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPriority@CThread@@QAE_NH@Z ENDP			; CThread::SetPriority
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\smith\projects\callcenter\thread.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
